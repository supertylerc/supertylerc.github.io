<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tyler's Technical Retreat]]></title>
  <link href="http://oss-stack.io//atom.xml" rel="self"/>
  <link href="http://oss-stack.io//"/>
  <updated>2014-06-21T23:42:24-07:00</updated>
  <id>http://oss-stack.io//</id>
  <author>
    <name><![CDATA[Tyler Christiansen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ansible Network Automation]]></title>
    <link href="http://oss-stack.io//blog/ansible-network-automation/"/>
    <updated>2014-06-20T19:59:19-07:00</updated>
    <id>http://oss-stack.io//blog/ansible-network-automation</id>
    <content type="html"><![CDATA[<h1>Introductions</h1>

<h2>Ansible</h2>

<p><a href="http://www.ansible.com/home" title="Ansible is Simple IT Automation">Ansible</a> is an agentless automation framework.  It typically relies
on a <a href="https://www.python.org/" title="Welcome to Python">Python</a> shell on its remote systems; some modules, however,
allow Ansible to behave differently.</p>

<blockquote><p>An <a href="http://docs.ansible.com/modules.html" title="About Modules">Ansible Module</a> is a behavior that Ansible executes.  This can
be to copy files, install Debian packages, or log into routers.</p></blockquote>

<p>You are encouraged to read the <a href="http://docs.ansible.com/" title="Ansible Documentation">Docs</a>, but we&rsquo;ll cover most of what
you need to know to start automating your Juniper Networks equipment in
this post.</p>

<h2>junos-eznc</h2>

<p><a href="https://github.com/Juniper/py-junos-eznc" title="py-junos-eznc on Github">junos-eznc</a> is a Python module from <a href="http://www.juniper.net/us/en/" title="Juniper Networks">Juniper Networks</a> (and, more
specifically, <a href="http://workflowsherpas.com/" title="Jeremy Schulman">Jeremy Schulman</a>, <a href="https://twitter.com/shermdog01" title="Rick Sherman on Twitter">Rick Sherman</a>, and <a href="https://github.com/vnitinv" title="Nitin Kumar at Github">Nitin
Kumar</a>).  It uses an ssh transport to communicate <a href="http://en.wikipedia.org/wiki/NETCONF" title="NETCONF">NETCONF</a>
commands, parse data and transform it to proper XML, and retrieve XML
for parsing and transformation into a more meaningful structure.</p>

<blockquote><p>I strongly recommend that you use junos-eznc on devices running Junos
11.4 and up <em>only</em>.  You can see reasons for this in issues <a href="https://github.com/Juniper/py-junos-eznc/issues/253" title="Error When Pushing New Config (set format, pre-Junos 11.4)">#253</a>
and <a href="https://github.com/Juniper/py-junos-eznc/issues/255" title="Only Delete Statements Are Pushed">#255</a>.</p></blockquote>

<p>The <em>junos-eznc</em> module is very easy to use&mdash;but we&rsquo;re not going to be
using it (directly) for our automation.  You only need to know of its
existence because it&rsquo;s a prerequisite for the <em>Ansible</em> module that
we&rsquo;ll be using.</p>

<h2>junos-stdlib</h2>

<p>The <a href="https://github.com/Juniper/ansible-junos-stdlib" title="Ansible Junos Stdlib Module">junos-stdlib</a> Ansible module is going to allow most of the
magic.  To use it, you&rsquo;ll need <em>junos-eznc</em> and <em>Ansible</em>.</p>

<blockquote><p>There are links inline the first time something is mentioned.  A
credits list appears at the end of this document, collecting
everything in one place.</p></blockquote>

<p>It requires some basic configuration, but it&rsquo;s all done with <a href="http://www.yaml.org/" title="YAML Ain't Markup Language">YAML</a>
files, which is more like reading text than code or configuration.</p>

<!-- more -->


<h1>Getting Started</h1>

<h2>Installing Git</h2>

<p>You&rsquo;ll need <a href="http://git-scm.com/" title="git SCM">git</a> to get started.  Make it easy on yourself.  If
you&rsquo;re running a Debian release, just type <code>sudo apt-get install git</code> in
a terminal.  If you&rsquo;re using a Mac, <a href="http://git-scm.com/download/mac" title="Git OS X Client">go here</a> and install.  There&rsquo;s
also a <a href="http://git-scm.com/download/win" title="Git Windows Client">Windows installer</a>.</p>

<h2>Installing Ansible</h2>

<p>Open a terminal and run the following commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir git <span class="o">&amp;&amp;</span> <span class="nb">cd</span> <span class="nv">$_</span>
</span><span class='line'>git clone https://github.com/ansible/ansible.git
</span><span class='line'><span class="nb">source</span> ./ansible/hacking/env-setup
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;source ~/git/ansible/hacking/env-setup&quot;</span> &gt;&gt; ~/.zshrc
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>I make a few assumptions about your environment in the above example
and in future examples.  First, I assume you&rsquo;re using <a href="http://en.wikipedia.org/wiki/Z_shell" title="zsh">zsh</a>.  If
you&rsquo;re not, replace <code>~/.zshrc</code> with the most likely alternative,
<code>~/.bashrc</code>.  Second, I assume that you want to collect all of your
<a href="http://git-scm.com/" title="git SCM">git</a> repos in one place&mdash;<code>~/git</code>.  If not, adjust accordingly.</p></blockquote>

<h2>Installing junos-eznc</h2>

<p>This is almost as easy as installing <em>Ansible</em>!  Open a terminal and run
the following commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo pip install git+https://github.com/Juniper/py-junos-eznc.git
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>You <em>might</em> get some annoying messages about libxml or libxslt.  For
Ubuntu, you&rsquo;ll want to run the command: <code>sudo apt-get install
libxml2-dev libxslt1-dev</code>.</p></blockquote>

<h2>Installing Ansible Junos Stdlib Module</h2>

<p>Once again, an easy step.  You know the drill!  Open a terminal and run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/git
</span><span class='line'>git clone https://github.com/Juniper/ansible-junos-stdlib.git
</span><span class='line'><span class="nb">source</span> ./ansible-junos-stdlib/env-setup
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;source ~/git/ansible-junos-stdlib/env-setup&quot;</span> &gt;&gt; ~/.zshrc
</span></code></pre></td></tr></table></div></figure>


<h2>Directory Setup</h2>

<p>This is the last stretch, and it&rsquo;s another quick one.  In a terminal,
run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /etc
</span><span class='line'>sudo mkdir ansible
</span><span class='line'>sudo chown <span class="k">$(</span>whoami<span class="k">)</span>:<span class="k">$(</span>whoami<span class="k">)</span> ansible
</span><span class='line'><span class="nb">cd </span>ansible
</span><span class='line'>touch hosts
</span><span class='line'>mkdir -p host_vars/ logs/ roles/common/<span class="o">{</span>tasks,templates,vars<span class="o">}</span>
</span><span class='line'>cp ~/src/ansible/examples/ansible.cfg .
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>This is just to get you started.  In production, you would have a
separate user for <em>Ansible</em>.  You would <em>not</em> run it as yourself.
We&rsquo;ll also be using the default <em>Ansible</em> configuration and simply
overriding when necessary via our playbook.</p></blockquote>

<h1>Defining Common Elements</h1>

<h2>Before We Start</h2>

<p>You&rsquo;ll need to do a bit of bootstrapping.  Create a user and set it to
use an SSH key as its mode of authentication.  This should be a separate
user and should have all configuration permissions.  Its key should be
the <code>id_rsa.pub</code> key on your laptop.  If you don&rsquo;t have one, use the
following command to generate one (and make your life easier for
<em>Ansible</em>&mdash;don&rsquo;t require a password):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh-keygen -t rsa -b 8192
</span></code></pre></td></tr></table></div></figure>


<p>Just follow the instructions and then:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pbcopy &lt; ~/.ssh/id_rsa.pub
</span></code></pre></td></tr></table></div></figure>


<p>to copy it to your clipboard.</p>

<h2>Ansible Template</h2>

<p><em>Ansible</em> is extremely flexile.  In our example, we&rsquo;re just going to use
it to set up a backdoor login and a user account using an SSH key.  We
call this <a href="http://docs.ansible.com/playbooks_roles.html" title="Ansible Roles">role</a> &ldquo;common&rdquo; since all of our routers will use it.
This role will also ensure our Ansible user exists.</p>

<blockquote><p>A <em>role</em> is just an organizational container that you can apply to one
or multiple hosts in any configuration.  See the documentation for
more details.</p></blockquote>

<p>To accomplish this, we&rsquo;ll use an <em>Ansible</em> module called <a href="http://docs.ansible.com/template_module.html" title="Ansible Template Module">template</a>.
This does pretty much what it sounds like&mdash;you define a skeleton
template, use variables where appropriate, and Ansible interpolates the
variables and outputs the compiled template to the specified
destination.  All of that&rsquo;s going to be defined in a <a href="http://docs.ansible.com/playbooks.html" title="Ansible Playbooks">playbook</a>, but
let&rsquo;s go ahead and create the template now.</p>

<p>Start by opening <code>/etc/ansible/roles/common/templates/login.j2</code> in your
text editor of choice.  Mine is <a href="http://www.vim.org/" title="Vim Homepage">vim</a>, so to open the file I would
type <code>vim /etc/ansible/roles/common/templates/login.j2</code> in a terminal
window and start editing.</p>

<p>Go ahead and paste the following in your file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>system <span class="o">{</span>
</span><span class='line'>  login <span class="o">{</span>
</span><span class='line'>    delete: class ADMIN;
</span><span class='line'>    class ADMIN <span class="o">{</span>
</span><span class='line'>      login-alarms;
</span><span class='line'>      permissions all;
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    delete: user ansible;
</span><span class='line'>    user ansible <span class="o">{</span>
</span><span class='line'>      full-name <span class="s2">&quot;Ansible Automation&quot;</span>;
</span><span class='line'>      class ADMIN;
</span><span class='line'>      authentication <span class="o">{</span>
</span><span class='line'>        ssh-rsa <span class="s2">&quot;{{ passwords.key }}&quot;</span>;
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="o">{</span>% <span class="k">if </span>users -%<span class="o">}</span>
</span><span class='line'>      <span class="o">{</span>% <span class="k">for </span>user in users -%<span class="o">}</span>
</span><span class='line'>        delete: user <span class="o">{{</span> user.login <span class="o">}}</span>;
</span><span class='line'>        user <span class="o">{{</span> user.login <span class="o">}}</span> <span class="o">{</span>
</span><span class='line'>          full-name <span class="s2">&quot;{{ user.name }}&quot;</span>;
</span><span class='line'>            class <span class="o">{{</span> user.class <span class="o">}}</span>;
</span><span class='line'>            authentication <span class="o">{</span>
</span><span class='line'>            <span class="o">{</span>% <span class="k">for </span>key in user.ssh_keys -%<span class="o">}</span>
</span><span class='line'>              ssh-rsa <span class="s2">&quot;{{ key }}&quot;</span>;
</span><span class='line'>            <span class="o">{</span>% endfor %<span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>      <span class="o">{</span>% endfor %<span class="o">}</span>
</span><span class='line'>    <span class="o">{</span>% endif %<span class="o">}</span>
</span><span class='line'>    delete: user v4d3r;
</span><span class='line'>    user v4d3r <span class="o">{</span>
</span><span class='line'>      full-name <span class="s2">&quot;Darth Vader&quot;</span>;
</span><span class='line'>      class ADMIN;
</span><span class='line'>      authentication <span class="o">{</span>
</span><span class='line'>        encrypted-password <span class="s2">&quot;{{ passwords.backdoor }}&quot;</span>;
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Be careful&mdash;this deletes previous configurations.  If your username
already exists and you delete its authentication parameters, you
<em>might</em> lock yourself out.  You&rsquo;ve been warned!</p></blockquote>

<p>Two things to note:</p>

<ol>
<li>Variable interpolation is denoted with two braces on each side of
the varaiable name (<code>{{</code> and <code>}}</code>).</li>
<li>Logic constructs are denoted with a brace and percent symbol on each
side of the variable name (<code>{%</code> and <code>%}</code>).</li>
</ol>


<p>Worth noting is that I use a hyphen before the percent in my constructs.
This helps reduce ridiculous indentation in the output (but I haven&rsquo;t
figured out how to prevent it entirely).</p>

<blockquote><p>The templating language is defined by <a href="http://jinja.pocoo.org/docs/" title="Jinja2 Documentation">jinja2</a>, the templating
language used by the <em>Ansible</em> <em>template</em> module.</p></blockquote>

<p>The template should be fairly straight forward.  Most of it&rsquo;s Junos
configuration, so I won&rsquo;t bother with that.  The important parts,
though:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>authentication <span class="o">{</span>
</span><span class='line'>  ssh-rsa <span class="s2">&quot;{{ passwords.key }}&quot;</span>;
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This stanza (and others like it) tells the <em>template</em> module to subsitute
the variable (a human-readable container for a value) for the value it
contains.  You&rsquo;ll see our variable definitions in a minute, but this
will replace <code>{{ passwords.key }}</code> with our SSH key from earlier.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">{</span>% <span class="k">if </span>users -%<span class="o">}</span>
</span><span class='line'>  ...
</span><span class='line'><span class="o">{</span>% endif %<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Everything between these two statements only gets executed if you&rsquo;ve
actually defined a variable called <code>users</code>.  If you haven&rsquo;t, everything
is skipped!  This is mostly a way to save myself from myself.  My first
deployment didn&rsquo;t define specific users, and I ran into issues.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">{</span>% <span class="k">for </span>user in users -%<span class="o">}</span>
</span><span class='line'>  ...
</span><span class='line'><span class="o">{</span>% endfor %<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This line&mdash;and others like it&mdash;are a way to loop through the <code>users</code>
variable, which is a <a href="http://jinja.pocoo.org/docs/templates/#literals" title="Jinja2 Literals">list</a> of <a href="http://jinja.pocoo.org/docs/templates/#literals" title="Jinja2 Literals">dicts</a>.  Each item is
temporarily placed in the <code>user</code> variable, replaced every time the loop
starts over again.  When the template has cycled through every item in
the list, it moves on.</p>

<blockquote><p>You may know <em>list</em> as <em>array</em> and <em>dict</em> as <em>hash</em>, depending on your
background.</p></blockquote>

<h2>Ansible Variables</h2>

<p>Ansible can inherit <a href="http://docs.ansible.com/playbooks_variables.html" title="Ansible Variables">variables</a> from many places, and it would be
beneficial to read the documentation on variable precedence.  For now,
though, just open up <code>/etc/ansible/roles/common/vars/main.yml</code> and put
the following in it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>passwords:
</span><span class='line'>  root: <span class="nv">$1$9v6XNl0O$JBWEmmgKG1ir4D03EQ3vG0</span>
</span><span class='line'>  key: ANSIBLE_KEY_HERE
</span><span class='line'>  backdoor: <span class="nv">$1$9v6XNl0O$JBWEmmgKG1ir4D03EQ3vG0</span>
</span><span class='line'>users:
</span><span class='line'>  - login: tyler
</span><span class='line'>    name: Tyler Christiansen
</span><span class='line'>    class: ADMIN
</span><span class='line'>    ssh_keys:
</span><span class='line'>      - YOUR_KEY_HERE
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>PLEASE be sure you replace the MD5 hashes above with your actual MD5
hashes.  This is a safe way to maintain passwords in Ansible
configurations without worrying about password safety (sort
of&hellip;obviously MD5 can be cracked).  If you don&rsquo;t replace them, you
will break your access to your equipment!</p></blockquote>

<p>Don&rsquo;t forget to replace <code>ANSIBLE_KEY_HERE</code> and <code>YOUR_KEY_HERE</code> with
actual SSH keys.  Oh, and <em>please</em> replace the MD5 hashes above with
your actual MD5 hashes.</p>

<h2>Ansible Tasks</h2>

<p>So far we&rsquo;ve defined a <em>template</em> and a list of <em>variables</em> for
<em>Ansible</em> to use.  Now, we need to define a serise of <a href="http://docs.ansible.com/playbooks_intro.html" title="Ansible Playbooks Intro">tasks</a>, which
are instructions that tell Ansible to actually do something with a
template (or anything else).  To do this, add the following to
<code>/etc/ansible/roles/common/tasks/main.yml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>- name: Login Configuration
</span><span class='line'>  template: <span class="nv">src</span><span class="o">=</span>login.j2 <span class="nv">dest</span><span class="o">=</span>/tmp/<span class="o">{{</span> inventory_hostname <span class="o">}}</span>.d/login.set <span class="nv">mode</span><span class="o">=</span>400
</span><span class='line'>  tags:
</span><span class='line'>    - common
</span><span class='line'>    - authentication
</span></code></pre></td></tr></table></div></figure>


<p>This should be pretty readable.  We name this task <code>Login
Configuration</code>, and we tell it that it&rsquo;s going to use the <code>template</code>
module, with a source of <code>login.j2</code> (it automatically looks in the
<code>templates</code> directory) and to output the compiled data to <code>dest=/tmp/{{
inventory_hostname }}.d/login.set</code> and set its permissions to <code>400</code>
(user can read, no one else can read, no one can write, and no one can
execute).  We then tag it with <code>common</code> and <code>authentication</code>, so that if
we want to deploy <em>only</em> <em>authentication</em> configuration in the future
(maybe because it&rsquo;s the only thing that changed), we can specify the
<em>authentication</em> tag and only tasks tagged with <em>authentication</em> will
execute.</p>

<blockquote><p>{{ inventory_hostname }} is a special variable that Ansible knows
about already called an <a href="http://docs.ansible.com/intro_inventory.html" title="Ansible Inventory">inventory</a> variable.</p></blockquote>

<h2>Ansible Playbook</h2>

<p>We&rsquo;re going to bring it all together.  An <em>Ansible</em> <em>playbook</em> is a
collection of tasks, sometimes defined explicitly and separate from
roles, plus one or more role definitions.  This happens on a
host-by-host basis, and each of these &ldquo;collections&rdquo; is called a
<a href="http://docs.ansible.com/intro_inventory.html" title="Ansible Inventory">play</a>.  The list of <em>plays</em> make up the <em>playbook</em>.</p>

<p>Now edit <code>/etc/ansible/router_auth.yml</code> and add the following to it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>- name: Setting Up
</span><span class='line'>  hosts: routers
</span><span class='line'>  connection: <span class="nb">local</span>
</span><span class='line'><span class="nb">  </span>gather_facts: no
</span><span class='line'>  tasks:
</span><span class='line'>    - name: Building Directories
</span><span class='line'>      file: <span class="nv">path</span><span class="o">=</span>/tmp/<span class="o">{{</span> inventory_hostname <span class="o">}}</span>.d <span class="nv">state</span><span class="o">=</span>directory
</span><span class='line'>
</span><span class='line'>- name: Configuration Deployment
</span><span class='line'>  hosts: routers
</span><span class='line'>  connection: <span class="nb">local</span>
</span><span class='line'><span class="nb">  </span>gather_facts: no
</span><span class='line'>  roles:
</span><span class='line'>    - common
</span><span class='line'>  tasks:
</span><span class='line'>    - name: Assembling Configuration
</span><span class='line'>      assemble: <span class="nv">src</span><span class="o">=</span>/tmp/<span class="o">{{</span> inventory_hostname <span class="o">}}</span>.d <span class="nv">dest</span><span class="o">=</span>/tmp/<span class="o">{{</span> inventory_hostname <span class="o">}}</span>.conf
</span><span class='line'>    - name: Deploying Configuration
</span><span class='line'>      junos_install_config:
</span><span class='line'>        <span class="nv">host</span><span class="o">={{</span> inventory_hostname <span class="o">}}</span>
</span><span class='line'>        <span class="nv">user</span><span class="o">=</span>ansible
</span><span class='line'>        <span class="nv">file</span><span class="o">=</span>/tmp/<span class="o">{{</span> inventory_hostname <span class="o">}}</span>.conf
</span><span class='line'>        <span class="nv">logfile</span><span class="o">=</span>/etc/ansible/logs/<span class="o">{{</span> inventory_hostname <span class="o">}}</span>.log
</span><span class='line'>        <span class="nv">timeout</span><span class="o">=</span><span class="s2">&quot;300&quot;</span>
</span><span class='line'>
</span><span class='line'>- name: Destroying Setup
</span><span class='line'>  hosts: routers
</span><span class='line'>  connection: <span class="nb">local</span>
</span><span class='line'><span class="nb">  </span>gather_facts: no
</span><span class='line'>  tasks:
</span><span class='line'>    - name: Destroying Temporary Directory
</span><span class='line'>      file: <span class="nv">path</span><span class="o">=</span>/tmp/<span class="o">{{</span> inventory_hostname <span class="o">}}</span>.d <span class="nv">state</span><span class="o">=</span>absent
</span><span class='line'>    - name: Destroying Compiled Configuration
</span><span class='line'>      file: <span class="nv">path</span><span class="o">=</span>/tmp/<span class="o">{{</span> inventory_hostname <span class="o">}}</span>.conf <span class="nv">state</span><span class="o">=</span>absent
</span></code></pre></td></tr></table></div></figure>


<p>This playbook defines a number of plays.  First, it sets us up for
success by ensuring the directory <code>/tmp/{{ inventory_hostname }}.d/</code>
exists using the <a href="http://docs.ansible.com/file_module.html" title="Ansible File Module">file</a> module.  Then, it combines all of our
partials (the templates&mdash;we only have one in this example, but
you would theoretically have several) located in the
<code>/tmp/{{ inventory_hostname }}.d/</code> directory and writes the
compiled output to <code>/tmp/{{ inventory_hostname }}.conf</code> using the
<a href="http://docs.ansible.com/assemble_module.html" title="Ansible Assemble Module">assemble</a> module.</p>

<p>While doing all of this, we&rsquo;re also telling the plays <em>not</em> to connect
to the remote machines (which we haven&rsquo;t defined yet), but instead to
perform all actions locally.  We <em>also</em> tell the plays not to gather
<a href="http://docs.ansible.com/playbooks_variables.html#information-discovered-from-systems-facts" title="Ansible Facts">facts</a>, which we don&rsquo;t need due to the nature of the current Junos
<em>Ansible</em> module.</p>

<blockquote><p>Plays execute in serial, but all hosts for a given play are executed
in parallel.</p></blockquote>

<p>Next, we use the <em>Juniper</em> <em>Ansible</em> <em>module</em> to establish a connection
and push our configuration.  Once that&rsquo;s done, we delete all of our
temporary configuration directories and compiled configuration to ensure
we&rsquo;re clean and sanitary for the next run.</p>

<h2>Ansible Hosts File</h2>

<p>The Ansible <a href="http://docs.ansible.com/intro_inventory.html" title="Ansible Inventory">hosts</a> file is an INI-like file that lets you define
groups and hosts and hosts that are members of groups or not members of
groups.  Hosts can be members of multiple groups, and there is a lot of
fun stuff to do in the hosts file.  See the documentation for more
details, but for our simple purposes, just add the following to
<code>/etc/ansible/hosts</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>routers<span class="o">]</span>
</span><span class='line'>sw01.example.com
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Obviously, replace with the DNS name of your lab router or switch.</p></blockquote>

<p>Now, you&rsquo;re ready.  Run the following command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ansible-playbook /etc/ansible/router_auth.yml
</span></code></pre></td></tr></table></div></figure>


<p>You should be met with success as in the following example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>╭─tchristiansen52 at us160536 in ~ using ‹ruby-2.1.1› 14-06-21 - 11:43:42
</span><span class='line'>╰─○ ansible-playbook /etc/ansible/router_auth.yml
</span><span class='line'>
</span><span class='line'>PLAY <span class="o">[</span>Setting Up<span class="o">]</span>
</span><span class='line'>*************************************************************
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>Building Temporary Directory<span class="o">]</span>
</span><span class='line'>******************************************
</span><span class='line'>changed: <span class="o">[</span>cs01.hq.example.com<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>Building Log Directory<span class="o">]</span>
</span><span class='line'>************************************************
</span><span class='line'>ok: <span class="o">[</span>cs01.hq.example.com<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>PLAY <span class="o">[</span>Configuration Deployment<span class="o">]</span>
</span><span class='line'>***********************************************
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>net_auth | Login Configuration<span class="o">]</span>
</span><span class='line'>****************************************
</span><span class='line'>changed: <span class="o">[</span>cs01.hq.example.com<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>Assembling Configuration<span class="o">]</span>
</span><span class='line'>**********************************************
</span><span class='line'>changed: <span class="o">[</span>cs01.hq.example.com<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>Deploying Configuration<span class="o">]</span>
</span><span class='line'>***********************************************
</span><span class='line'>changed: <span class="o">[</span>cs01.hq.example.com<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>PLAY <span class="o">[</span>Destroying Setup<span class="o">]</span>
</span><span class='line'>*******************************************************
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>Destroying Temporary Directory<span class="o">]</span>
</span><span class='line'>****************************************
</span><span class='line'>changed: <span class="o">[</span>cs01.hq.example.com<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>Destroying Compiled Configuration<span class="o">]</span>
</span><span class='line'>*************************************
</span><span class='line'>changed: <span class="o">[</span>cs01.hq.example.com<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP
</span><span class='line'>********************************************************************
</span><span class='line'>cs01.hq.example.com            : <span class="nv">ok</span><span class="o">=</span>7    <span class="nv">changed</span><span class="o">=</span>6    <span class="nv">unreachable</span><span class="o">=</span>0 <span class="nv">failed</span><span class="o">=</span>0
</span><span class='line'>
</span><span class='line'>╭─tchristiansen52 at us160536 in ~ using ‹ruby-2.1.1› 14-06-21 - 11:43:42
</span><span class='line'>╰─○
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>My output is slightly different as I&rsquo;m testing a production
deployment.</p></blockquote>

<h1>Summary</h1>

<p>It seems like a lot of work, but it&rsquo;s almost guaranteed to be easier
than getting up and running with <a href="http://puppetlabs.com/" title="Puppet">Trigger</a>, <a href="http://www.getchef.com/chef/" title="Chef">Puppet</a>,
<a href="https://github.com/ansible/ansible" title="Ansible Git Repository">Chef</a>, and similar frameworks.  Your options are endless, writing
modules is decently easy, and the overall design makes sense.</p>

<h1>References</h1>

<h3>Ansible</h3>

<ul>
<li><a href="http://www.ansible.com/home" title="Ansible is Simple IT Automation">Ansible</a></li>
<li><a href="http://docs.ansible.com/" title="Ansible Documentation">Documentation</a></li>
<li><a href="http://docs.ansible.com/modules.html" title="About Modules">Modules</a></li>
<li><a href="http://docs.ansible.com/playbooks_roles.html" title="Ansible Roles">Roles</a></li>
<li><a href="http://docs.ansible.com/playbooks_intro.html" title="Ansible Playbooks Intro">Playbooks Intro</a></li>
<li><a href="http://docs.ansible.com/playbooks.html" title="Ansible Playbooks">Playbooks</a></li>
<li><a href="http://docs.ansible.com/playbooks_variables.html" title="Ansible Variables">Variables</a></li>
<li><a href="http://docs.ansible.com/intro_inventory.html" title="Ansible Inventory">Inventory</a></li>
<li><a href="http://docs.ansible.com/playbooks_variables.html#information-discovered-from-systems-facts" title="Ansible Facts">Facts</a></li>
<li><a href="http://docs.ansible.com/template_module.html" title="Ansible Template Module">Template Module</a></li>
<li><a href="http://docs.ansible.com/file_module.html" title="Ansible File Module">File Module</a></li>
<li><a href="http://docs.ansible.com/assemble_module.html" title="Ansible Assemble Module">Assemble Module</a></li>
<li><a href="https://github.com/ansible/ansible" title="Ansible Git Repository">Ansible Git Repo</a></li>
</ul>


<h3>Juniper</h3>

<ul>
<li><a href="http://www.juniper.net/us/en/" title="Juniper Networks">Juniper Networks</a></li>
<li><a href="https://github.com/Juniper/py-junos-eznc" title="py-junos-eznc on Github">junos-eznc</a></li>
<li><a href="https://github.com/Juniper/ansible-junos-stdlib" title="Junos Ansible Module">Juniper Ansible Module</a></li>
<li><a href="http://workflowsherpas.com/" title="Jeremy Schulman">Jeremy Schulman</a></li>
<li><a href="https://twitter.com/shermdog01" title="Rick Sherman on Twitter">Rick Sherman</a></li>
<li><a href="https://github.com/vnitinv" title="Nitin Kumar at Github">Nitin Kumar</a></li>
<li><a href="https://github.com/Juniper/py-junos-eznc/issues/253" title="Error When Pushing New Config (set format, pre-Junos 11.4)">Error Push Set pre-11.4</a></li>
<li><a href="https://github.com/Juniper/py-junos-eznc/issues/255" title="Only Delete Statements Are Pushed">Only Delete Statements are Pushed</a></li>
</ul>


<h3>Jinja2</h3>

<ul>
<li><a href="http://jinja.pocoo.org/docs/" title="Jinja2 Documentation">Jinja2</a></li>
<li><a href="http://jinja.pocoo.org/docs/templates/#literals" title="Jinja2 Literals">Literals (Lists, Dicts)</a></li>
</ul>


<h3>Git</h3>

<ul>
<li><a href="http://git-scm.com/" title="git SCM">Git</a></li>
<li><a href="http://git-scm.com/download/mac" title="Git OS X Client">Git OS X Client</a></li>
<li><a href="http://git-scm.com/download/win" title="Git Windows Client">Git Windows Client</a></li>
</ul>


<h3>Miscellaneous</h3>

<ul>
<li><a href="http://en.wikipedia.org/wiki/NETCONF" title="NETCONF">NETCONF</a></li>
<li><a href="http://www.yaml.org/" title="YAML Ain't Markup Language">YAML</a></li>
<li><a href="http://en.wikipedia.org/wiki/Z_shell" title="zsh">zsh</a></li>
<li><a href="http://www.vim.org/" title="Vim Homepage">vim</a></li>
</ul>


<h3>Other Automation Solutions</h3>

<ul>
<li><a href="https://trigger.readthedocs.org/en/latest/" title="AOL Trigger">Trigger</a></li>
<li><a href="http://puppetlabs.com/" title="Puppet">Puppet</a></li>
<li><a href="http://www.getchef.com/chef/" title="Chef">Chef</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Things You Don't Know About Your Network]]></title>
    <link href="http://oss-stack.io//blog/things-you-dont-know-about-your-network/"/>
    <updated>2014-03-20T22:27:13-07:00</updated>
    <id>http://oss-stack.io//blog/things-you-dont-know-about-your-network</id>
    <content type="html"><![CDATA[<p>Think your network is secure?  Guess again.  Chances are you have
glaring security holes in your network.  I&rsquo;m not talking about random
holes that no one would think to check&mdash;I&rsquo;m talking about very simple
things that give attackers all of the information they could possibly
want on your network equpiment.</p>

<blockquote><p><strong>DISCLAIMER</strong>: Please do <strong>NOT</strong> attempt to perform any attacks or
active reconnaissance based on the information in this article unless
it is on your own network and you have permission to do so!  You could
end up in jail, and I&rsquo;m not responsible for your actions.  If you
can&rsquo;t resist, just stop reading here.</p></blockquote>

<h2>Selecting a Target Platform</h2>

<p>For this very simple reconnaissance mission, we&rsquo;re going to target a
Junos platform that responds to public SNMP requests.  This allows us to
gain as much information as we could possibly want about our potential
targets and gives us an at-a-glance view of our potential target base.</p>

<p>I&rsquo;ll even be a bit more specific&mdash;we&rsquo;re looking for Juniper EX platforms
on the public Internet responding to public SNMP requests which may be
using a default community (or one easily brute forced) and most likely
running SNMPv2c.</p>

<!-- more -->


<h2>The Tool</h2>

<p>Hop over to <a href="http://shodanhq.com/">ShodanHQ</a> and poke around a bit.
When you&rsquo;re relatively satisfied, come back here and we&rsquo;ll keep going.</p>

<h2>The Query</h2>

<p>Our search string is actually pretty simple.  It is just <code>ex junos
port:161 country:us</code>.  Enter that in the search box and hit enter.  Or
you could just point your browser
<a href="http://www.shodanhq.com/search?q=ex+junos+port%3A161+country%3Aus">here</a>.</p>

<blockquote><p>Note: You need an account (it&rsquo;s free) to search by country.  Feel free
to leave the country off, though, and see your global target base.</p></blockquote>

<p>The results may surprise you.  You don&rsquo;t even have to run the SNMP
reconnassaince yourself, really, as Shodan gives you the results of
querying the <code>sysDescr</code> MIB.  Now, here&rsquo;s the trick: it appears that
when Shodan is doing its poke at things, it&rsquo;s actually brute-forcing the
community&mdash;with a great deal of success, I might add.  Some of these may
be using a community string of <strong>public</strong>.  Others may be using
something equally simple but easily guessed.</p>

<p>To be honest, depending on the type of attack you&rsquo;d like to ultimately
launch, you could just stop here.  But if you want more details about
the system&mdash;IP addresses, hardware installed, anything that sends its
details via SNMP&mdash;you could use SNMP as your only tool for gathering
information and have everything you need.</p>

<h2>Finding an Exploit</h2>

<p>This is also trivial.  Let&rsquo;s say you knew you wanted to target Juniper
EX switches, but you didn&rsquo;t know what attacks were out there or what the
severity of those attacks are.  Enter Shodan once again, this time via
their <a href="https://exploits.shodan.io/">Shodan Exploits</a> site.  Enter a
search query of <code>junos 10.4</code>, or follow <a href="https://exploits.shodan.io/?q=junos+10.4">this
link</a>.</p>

<blockquote><p>Note: there seems to be an issue with the links for exploits that
results in 404s for all of the exploits.  Since they&rsquo;re CVEs, though,
you can just grab the CVE number (it&rsquo;s the last part of the URL for
the <strong>exploit-db</strong> link) and look up the info on the <a href="http://cve.mitre.org/">Official CVE
site</a>.</p></blockquote>

<p>Voila.  You have a list of exploits that telling you what versions are
affected and what the attack vector is.  You also have a list of
affected devices.  If you make use of the <a href="https://developer.shodan.io/">Shodan
API</a>, it&rsquo;s <em>even easier</em>.</p>

<h2>Wrap Up</h2>

<p>To be fair, you actually have to have a way to perform the exploit.  But
hackers are pretty smart people.  There&rsquo;s probably an exploit out there
already that they just have to fish up.  Or, if the target is important
or large enough, they&rsquo;ll just write their own.</p>

<p>The point of this article has been to point out how extremely easy it is
to perform reconnaissance on a network.  And&mdash;chances are&mdash;you&rsquo;re
affected.  I spoke with a few engineers last night and was able to find
exposed machines in their networks just by searching by company name.
They had no clue they were as exposed as they are.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Snippet: Juniper NTP Configuration and Protection]]></title>
    <link href="http://oss-stack.io//blog/juniper-ntp-configuration-and-protection/"/>
    <updated>2014-03-03T21:22:36-08:00</updated>
    <id>http://oss-stack.io//blog/juniper-ntp-configuration-and-protection</id>
    <content type="html"><![CDATA[<p>Below, you&rsquo;ll see a quick way to configure NTP on a Junos device,
including how to secure the device from the current NTP amplification
attack that&rsquo;s floating around.</p>

<h2>Configuration</h2>

<p>Below, I show a sample configuration in a lab environment.</p>

<blockquote><p>The firewall filter below should not be used in production
environments.  The &ldquo;<strong>NTP</strong>&rdquo; section is secure; the rest is not.  Take
the appropriate &ldquo;<strong>NTP</strong>&rdquo; section, but do not use the rest.  This is a
lab environment!</p></blockquote>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@jnpr04-m7i# show | compare
</span><span class='line'><span class="o">[</span>edit system<span class="o">]</span>
</span><span class='line'>+   ntp <span class="o">{</span>
</span><span class='line'>+       server 192.168.0.1;
</span><span class='line'>+       server 192.168.0.5;
</span><span class='line'>+   <span class="o">}</span>
</span><span class='line'><span class="o">[</span>edit interfaces<span class="o">]</span>
</span><span class='line'>+   lo0 <span class="o">{</span>
</span><span class='line'>+       unit 0 <span class="o">{</span>
</span><span class='line'>+           family inet <span class="o">{</span>
</span><span class='line'>+               filter <span class="o">{</span>
</span><span class='line'>+                   input RE_PROTECT;
</span><span class='line'>+               <span class="o">}</span>
</span><span class='line'>+               address 4.4.4.4/32;
</span><span class='line'>+           <span class="o">}</span>
</span><span class='line'>+       <span class="o">}</span>
</span><span class='line'>+   <span class="o">}</span>
</span><span class='line'><span class="o">[</span>edit policy-options<span class="o">]</span>
</span><span class='line'>    prefix-list RFC1918 <span class="o">{</span> ... <span class="o">}</span>
</span><span class='line'>+   prefix-list NTP <span class="o">{</span>
</span><span class='line'>+       4.4.4.4/32;
</span><span class='line'>+       apply-path <span class="s2">&quot;system ntp server &lt;*&gt;&quot;</span>;
</span><span class='line'>+   <span class="o">}</span>
</span><span class='line'><span class="o">[</span>edit<span class="o">]</span>
</span><span class='line'>+  firewall <span class="o">{</span>
</span><span class='line'>+      family inet <span class="o">{</span>
</span><span class='line'>+          filter RE_PROTECT <span class="o">{</span>
</span><span class='line'>+              term <span class="k">if</span>-ntp <span class="o">{</span>
</span><span class='line'>+                  from <span class="o">{</span>
</span><span class='line'>+                      prefix-list <span class="o">{</span>
</span><span class='line'>+                          NTP;
</span><span class='line'>+                      <span class="o">}</span>
</span><span class='line'>+                      protocol udp;
</span><span class='line'>+                      port ntp;
</span><span class='line'>+                  <span class="o">}</span>
</span><span class='line'>+                  <span class="k">then </span>accept;
</span><span class='line'>+              <span class="o">}</span>
</span><span class='line'>+              term <span class="k">if</span>-ssh <span class="o">{</span>
</span><span class='line'>+                  from <span class="o">{</span>
</span><span class='line'>+                      protocol tcp;
</span><span class='line'>+                      port ssh;
</span><span class='line'>+                  <span class="o">}</span>
</span><span class='line'>+                  <span class="k">then </span>accept;
</span><span class='line'>+              <span class="o">}</span>
</span><span class='line'>+              term <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>+                  <span class="k">then</span> <span class="o">{</span>
</span><span class='line'>+                      reject;
</span><span class='line'>+                  <span class="o">}</span>
</span><span class='line'>+              <span class="o">}</span>
</span><span class='line'>+          <span class="o">}</span>
</span><span class='line'>+      <span class="o">}</span>
</span><span class='line'>+  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>edit<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>It&rsquo;s important to note that you need to allow your loopback IP in the
firewall filter, otherwise you won&rsquo;t be able to query yourself (which
is what <code>show ntp associations</code> does).</p></blockquote>

<h2>Verification</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@jnpr04-m7i&gt; show ntp associations
</span><span class='line'>     remote           refid      st t when poll reach   delay   offset  <span class="nv">jitter</span>
</span><span class='line'><span class="o">==============================================================================</span>
</span><span class='line'>*192.168.0.1     17.168.198.149   2 -  186 1024  377   70.734    1.999   0.105
</span><span class='line'>+192.168.0.5     108.71.253.18    2 -  216 1024  377   12.510   -0.580   0.356
</span><span class='line'>
</span><span class='line'><span class="o">{</span>primary:node0<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploring Junos Traffic Monitoring]]></title>
    <link href="http://oss-stack.io//blog/exploring-junos-traffic-monitoring/"/>
    <updated>2014-02-27T21:20:40-08:00</updated>
    <id>http://oss-stack.io//blog/exploring-junos-traffic-monitoring</id>
    <content type="html"><![CDATA[<p>While preparing for another post, I ran into an interesting Junos
&ldquo;feature.&rdquo;  First, the problem statement: I needed to monitor traffic
for all interfaces simultaneously for a specific set of conditions.  In
Junos, this is not possible.  Let&rsquo;s explore this below.</p>

<h2>The Attempt</h2>

<p>Below, I&rsquo;ll step through the various attempts I made to monitor all
traffic on the device.</p>

<p>First, I made the attempt from the Junos shell with the <code>monitor
traffic</code> command.  I utilized the <code>matching</code> knob, which takes a
<code>tcpdump</code>-like filter expression as an argument.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tylerc@lab01&gt; monitor traffic matching <span class="s2">&quot;host 192.168.0.1 &amp;&amp; udp &amp;&amp; port 9997&quot;</span>
</span><span class='line'>verbose output suppressed, use &lt;detail&gt; or &lt;extensive&gt; <span class="k">for </span>full protocol decode
</span><span class='line'>Address resolution is ON. Use &lt;no-resolve&gt; to avoid any reverse lookup delay.
</span><span class='line'>Address resolution timeout is 4s.
</span><span class='line'>Listening on fxp0, capture size 96 bytes
</span><span class='line'>
</span><span class='line'>^C
</span><span class='line'>4 packets received by filter
</span><span class='line'>0 packets dropped by kernel
</span><span class='line'>
</span><span class='line'><span class="o">{</span>master:0<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>After I noted that this listens on the management interface (<code>fxp0</code> in
this case) by default, I proceeded to drop to the shell and attempt to
utilize <code>tcpdump</code> directly.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tylerc@lab01&gt; start shell
</span><span class='line'>% tcpdump -n host 192.168.0.1 and udp and port 9997
</span><span class='line'><span class="o">(</span>no devices found<span class="o">)</span> /dev/bpf0: Permission denied
</span><span class='line'>% tcpdump
</span><span class='line'><span class="o">(</span>no devices found<span class="o">)</span> /dev/bpf0: Permission denied
</span><span class='line'>%
</span></code></pre></td></tr></table></div></figure>


<p>After receiving a &ldquo;<strong>Permission denied</strong>&rdquo; error, I made myself the root
user and tried using <code>tcpdump</code> again.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>% whoami
</span><span class='line'>tylerc
</span><span class='line'>% su
</span><span class='line'>Password:
</span><span class='line'>root@core:RE:0% whoami
</span><span class='line'>root
</span><span class='line'>root@lab01:RE:0% tcpdump -n host 192.168.0.1 and udp and port 9997
</span><span class='line'>verbose output suppressed, use &lt;detail&gt; or &lt;extensive&gt; <span class="k">for </span>full protocol decode
</span><span class='line'>Address resolution is OFF.
</span><span class='line'>Listening on fxp0, capture size 96 bytes
</span><span class='line'>
</span><span class='line'>^C
</span><span class='line'>1 packets received by filter
</span><span class='line'>0 packets dropped by kernel
</span><span class='line'>root@lab01:RE:0% <span class="nb">exit</span>
</span><span class='line'><span class="nb">exit</span>
</span><span class='line'>% <span class="nb">exit</span>
</span><span class='line'><span class="nb">exit</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>master:0<span class="o">}</span>
</span><span class='line'>tylerc@lab01&gt;
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>The <code>monitor traffic</code> operational command utilizes <code>tcpdump</code> under the
hood.  The attempt here was to see if Junos might have abstracted
certain capabilities.</p></blockquote>

<p>As you can see above, there is no way to listen to all interfaces.
After some research, I&rsquo;ve discovered that this is a BSD limitation.
There is no work around.</p>

<blockquote><p>You can read about it
<a href="https://www.mail-archive.com/tcpdump-workers@lists.tcpdump.org/msg03923.html">here</a>.
Although dated, the post is accurate.</p></blockquote>

<h2>The Solution</h2>

<p>The solution is actually pretty obvious: discover the outbound interface
and monitor traffic for it.  See the example below for determining the
route to our destination (<strong>192.168.0.1</strong>) and then listening for the
same details.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tylerc@lab01&gt; show route 192.168.0.1
</span><span class='line'>
</span><span class='line'>inet.0: 477454 destinations, 952821 routes <span class="o">(</span>477454 active, 0 holddown, 0 hidden<span class="o">)</span>
</span><span class='line'>+ <span class="o">=</span> Active Route, - <span class="o">=</span> Last Active, * <span class="o">=</span> Both
</span><span class='line'>
</span><span class='line'>192.168.0.0/16      *<span class="o">[</span>Static/5<span class="o">]</span> 22w1d 06:04:53
</span><span class='line'>                    &gt; to 192.168.1.1 via fxp0.0
</span><span class='line'>
</span><span class='line'>tylerc@lab01&gt; monitor traffic matching <span class="s2">&quot;host 192.168.0.1 &amp;&amp; udp &amp;&amp; port 9997&quot;</span> count 5 no-resolve
</span><span class='line'>verbose output suppressed, use &lt;detail&gt; or &lt;extensive&gt; <span class="k">for </span>full protocol decode
</span><span class='line'>Address resolution is OFF.
</span><span class='line'>Listening on fxp0, capture size 96 bytes
</span><span class='line'>
</span><span class='line'>08:20:28.123704 Out IP truncated-ip - 1384 bytes missing! 192.168.1.2.51925 &gt; 192.168.0.1.9997: UDP, length 1416
</span><span class='line'>08:20:28.123820 Out IP truncated-ip - 1384 bytes missing! 192.168.1.2.51925 &gt; 192.168.0.1.9997: UDP, length 1416
</span><span class='line'>08:20:28.123936 Out IP truncated-ip - 1384 bytes missing! 192.168.1.2.51925 &gt; 192.168.0.1.9997: UDP, length 1416
</span><span class='line'>08:20:28.124048 Out IP truncated-ip - 1384 bytes missing! 192.168.1.2.51925 &gt; 192.168.0.1.9997: UDP, length 1416
</span><span class='line'>08:20:28.124159 Out IP truncated-ip - 1384 bytes missing! 192.168.1.2.51925 &gt; 192.168.0.1.9997: UDP, length 1416
</span><span class='line'>
</span><span class='line'>tylerc@lab01&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Finally, you can see the output I was after.  Unfortunately, listening
on all interfaces isn&rsquo;t possible.  A combination of <code>show route
&lt;address|network&gt;</code> and `show route forwarding-table destination</p>

<p><address>` will show you the appropriate information, though!</p>

<blockquote><p>In this particular example, the route I was interested in just
happened to be via the management interface (the default for <code>monitor
traffic</code>.  For other interesting data that you need to capture,
however, this probably won&rsquo;t be the case&mdash;that&rsquo;s why the <code>show route</code>
output is there.  Furthermore, you&rsquo;ll probably want to do a <code>show
route forwarding-table destination &lt;address&gt;</code> in order to ensure
you&rsquo;re monitoring the appropriate interface.</p></blockquote>

<h1>A Word of Caution</h1>

<p>I originally attempted this on an EX series switch, but there appears to
be a bug.  The switch <em>never</em> captured any output for the port in which
I was interested, but I was able to confirm that it was sending the data
by monitoring the other side.  A case with JTAC will be opened to
explore that particular issue closer.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Snippet: F5 sFlow Configuration]]></title>
    <link href="http://oss-stack.io//blog/f5-sflow-configuration/"/>
    <updated>2014-02-25T21:18:23-08:00</updated>
    <id>http://oss-stack.io//blog/f5-sflow-configuration</id>
    <content type="html"><![CDATA[<h1>F5 sFlow Configuration</h1>

<p>In the first of a new series of snippets, we cover configuring an sFlow
collector on an F5 Networks Big IP LTM 7200v!</p>

<blockquote><p>While the target platform is an LTM 7200v, this procedure should work
on any F5 Networks platform running Big IP v11 or greater.  It may
work with other versions of Big IP if they support the <code>tmsh</code>
interface.</p></blockquote>

<h2>Necessary Information</h2>

<p>Before we get started, let&rsquo;s just cover some necessary information.
First, I assume you have a collector somewhere capable of receiving
sFlow data and that you know how to configure it properly.  In the
examples below, my collector has the IP address <code>192.168.0.1</code> and
expects to receive sFlow data on UDP port <code>9993</code>.</p>

<!-- more -->


<h2>Configuration</h2>

<blockquote><p>IP addresses and port numbers have been changed to protect the
innocent.</p></blockquote>

<h3>Snippet</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>create receiver nms address 192.168.0.1 port 9993 state enabled
</span></code></pre></td></tr></table></div></figure>


<h3>Example</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>admin@7200v:Active:In Sync<span class="o">]</span> ~ <span class="c"># tmsh</span>
</span><span class='line'>admin@<span class="o">(</span>7200v<span class="o">)(</span>cfg-sync In Sync<span class="o">)(</span>Active<span class="o">)(</span>/Common<span class="o">)(</span>tmos<span class="o">)</span><span class="c"># sys sflow</span>
</span><span class='line'>admin@<span class="o">(</span>7200v<span class="o">)(</span>cfg-sync In Sync<span class="o">)(</span>Active<span class="o">)(</span>/Common<span class="o">)(</span>tmos.sys.sflow<span class="o">)</span><span class="c"># create receiver noms address 192.168.0.1 port 9993 state enabled</span>
</span><span class='line'>admin@<span class="o">(</span>7200v<span class="o">)(</span>cfg-sync In Sync<span class="o">)(</span>Active<span class="o">)(</span>/Common<span class="o">)(</span>tmos.sys.sflow<span class="o">)</span><span class="c"># list</span>
</span><span class='line'>sys sflow global-settings http <span class="o">{</span> <span class="o">}</span>
</span><span class='line'>sys sflow global-settings interface <span class="o">{</span> <span class="o">}</span>
</span><span class='line'>sys sflow global-settings system <span class="o">{</span> <span class="o">}</span>
</span><span class='line'>sys sflow global-settings vlan <span class="o">{</span> <span class="o">}</span>
</span><span class='line'>sys sflow receiver noms <span class="o">{</span>
</span><span class='line'>    address 192.168.0.1
</span><span class='line'>    port palace-2
</span><span class='line'>    state enabled
</span><span class='line'><span class="o">}</span>
</span><span class='line'>admin@<span class="o">(</span>7200v<span class="o">)(</span>cfg-sync In Sync<span class="o">)(</span>Active<span class="o">)(</span>/Common<span class="o">)(</span>tmos.sys.sflow<span class="o">)</span><span class="c"># quit</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><code>port palace-2</code> is a &ldquo;well-known&rdquo; port that the F5 translates to a
name.  It is port <code>9993</code>.</p></blockquote>

<h3>Verification</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>admin@7200v:Active:In Sync<span class="o">]</span> ~ <span class="c"># tcpdump -c 5 -nni any host 192.168.0.1 and udp and port 9993 -vv</span>
</span><span class='line'>tcpdump: listening on any, link-type EN10MB <span class="o">(</span>Ethernet<span class="o">)</span>, capture size 96 bytes
</span><span class='line'>20:08:44.683361 IP <span class="o">(</span>tos 0x0, ttl 255, id 54233, offset 0, flags <span class="o">[</span>DF<span class="o">]</span>, proto: UDP <span class="o">(</span>17<span class="o">)</span>, length: 208<span class="o">)</span> 192.168.0.2.46343 &gt; 192.168.0.1.9993: UDP, length 180
</span><span class='line'>20:08:44.696217 IP <span class="o">(</span>tos 0x0, ttl 255, id 37826, offset 0, flags <span class="o">[</span>DF<span class="o">]</span>, proto: UDP <span class="o">(</span>17<span class="o">)</span>, length: 208<span class="o">)</span> 192.168.0.2.39833 &gt; 192.168.0.1.9993: UDP, length 180
</span><span class='line'>20:08:44.706779 IP <span class="o">(</span>tos 0x0, ttl 255, id 37896, offset 0, flags <span class="o">[</span>DF<span class="o">]</span>, proto: UDP <span class="o">(</span>17<span class="o">)</span>, length: 228<span class="o">)</span> 192.168.0.2.39833 &gt; 192.168.0.1.9993: UDP, length 200
</span><span class='line'>20:08:44.720309 IP <span class="o">(</span>tos 0x0, ttl 255, id 37994, offset 0, flags <span class="o">[</span>DF<span class="o">]</span>, proto: UDP <span class="o">(</span>17<span class="o">)</span>, length: 272<span class="o">)</span> 192.168.0.2.39833 &gt; 192.168.0.1.9993: UDP, length 244
</span><span class='line'>20:08:44.731756 IP <span class="o">(</span>tos 0x0, ttl 255, id 38056, offset 0, flags <span class="o">[</span>DF<span class="o">]</span>, proto: UDP <span class="o">(</span>17<span class="o">)</span>, length: 208<span class="o">)</span> 192.168.0.2.39833 &gt; 192.168.0.1.9993: UDP, length 180
</span><span class='line'>5 packets captured
</span><span class='line'>5 packets received by filter
</span><span class='line'>0 packets dropped by kernel
</span><span class='line'><span class="o">[</span>admin@7200v:Active:In Sync<span class="o">]</span> ~ <span class="c">#</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>In the <code>tcpdump</code> example, feel free to go a step further and add <code>-X</code>
or <code>-XX</code> to get the actual contents of the packet.  These options were
left off in the interest of brevity.</p></blockquote>

<h2>THE END!</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Python to Retrieve Routes]]></title>
    <link href="http://oss-stack.io//blog/using-python-to-retrieve-routes/"/>
    <updated>2014-01-25T21:15:00-08:00</updated>
    <id>http://oss-stack.io//blog/using-python-to-retrieve-routes</id>
    <content type="html"><![CDATA[<blockquote><p>You should read <a href="http://oss-stack.io//blog/using-python-to-retrieve-port-status/" title="Using Python to Retrieve Port Status">this post on retrieving port status</a> first.  It
goes into the details of setting up <a href="https://github.com/Juniper/py-junos-eznc" title="py-junos-eznc">py-junos-eznc</a> and getting
your environment going.</p></blockquote>

<p>We&rsquo;ve previously tackled retrieving port status for multiple devices
using Python; now, let&rsquo;s take a look at ensuring we have similar route
entries on multiple devices.</p>

<h2>The Script</h2>

<p>We&rsquo;re going to use the same design principles as we did in the previous
script, so I won&rsquo;t bother going through the explanation here.</p>

<!-- more -->


<p>Here&rsquo;s the script:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'><span class="c"># Author  : Tyler Christiansen</span>
</span><span class='line'><span class="c"># Purpose : Get route info for multiple routers</span>
</span><span class='line'><span class="c"># Date    : 2013-01-21</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">jnpr.junos</span> <span class="kn">import</span> <span class="n">Device</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">jnpr.junos.op.routes</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'>
</span><span class='line'><span class="n">config_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;config.json&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">config</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">config_file</span><span class="p">)</span>
</span><span class='line'><span class="n">config_file</span><span class="o">.</span><span class="n">close</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">host</span> <span class="ow">in</span> <span class="n">config</span><span class="p">[</span><span class="s">&#39;hosts&#39;</span><span class="p">]:</span>
</span><span class='line'>  <span class="n">rtr</span> <span class="o">=</span> <span class="n">Device</span><span class="p">(</span>
</span><span class='line'>                <span class="n">user</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;user&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="n">password</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;pass&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="n">host</span><span class="o">=</span><span class="n">host</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">rtr</span><span class="o">.</span><span class="n">open</span><span class="p">()</span>
</span><span class='line'>  <span class="k">print</span><span class="p">(</span><span class="s">&quot;Host: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">host</span><span class="p">)</span>
</span><span class='line'>  <span class="k">print</span><span class="p">(</span><span class="s">&quot;</span><span class="si">%s%s%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span>
</span><span class='line'>                     <span class="s">&quot;Route&quot;</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="mi">20</span><span class="p">),</span>
</span><span class='line'>                     <span class="s">&quot;Protocol&quot;</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span>
</span><span class='line'>                     <span class="s">&quot;Next Hop&quot;</span>
</span><span class='line'>                   <span class="p">)</span>
</span><span class='line'>       <span class="p">)</span>
</span><span class='line'>  <span class="k">print</span> <span class="s">&#39;-&#39;</span> <span class="o">*</span> <span class="mi">65</span>
</span><span class='line'>  <span class="k">print</span>
</span><span class='line'>  <span class="k">for</span> <span class="n">route</span> <span class="ow">in</span> <span class="n">config</span><span class="p">[</span><span class="s">&#39;routes&#39;</span><span class="p">]:</span>
</span><span class='line'>    <span class="n">results</span> <span class="o">=</span> <span class="n">RouteTable</span><span class="p">(</span><span class="n">rtr</span><span class="p">)</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">route</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">route_data</span> <span class="ow">in</span> <span class="n">results</span><span class="p">:</span>
</span><span class='line'>      <span class="k">print</span><span class="p">(</span><span class="s">&quot;</span><span class="si">%s%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span>
</span><span class='line'>                       <span class="n">route</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="mi">20</span><span class="p">),</span>
</span><span class='line'>                       <span class="n">route_data</span><span class="o">.</span><span class="n">protocol</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>                     <span class="p">)</span>
</span><span class='line'>           <span class="p">),</span>
</span><span class='line'>      <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">route_data</span><span class="o">.</span><span class="n">nexthop</span><span class="p">,</span> <span class="nb">list</span><span class="p">):</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">index</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">route_data</span><span class="o">.</span><span class="n">nexthop</span><span class="p">):</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">index</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>            <span class="k">print</span><span class="p">(</span><span class="s">&quot;</span><span class="si">%s</span><span class="s">, via </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span>
</span><span class='line'>                                   <span class="n">route_data</span><span class="o">.</span><span class="n">nexthop</span><span class="p">[</span><span class="n">index</span><span class="p">],</span>
</span><span class='line'>                                   <span class="n">route_data</span><span class="o">.</span><span class="n">via</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>
</span><span class='line'>                                 <span class="p">)</span>
</span><span class='line'>                 <span class="p">)</span>
</span><span class='line'>          <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="k">print</span><span class="p">(</span><span class="s">&quot; &quot;</span> <span class="o">*</span> <span class="mi">31</span> <span class="o">+</span> <span class="s">&quot;</span><span class="si">%s</span><span class="s">, via </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span>
</span><span class='line'>                                              <span class="n">route_data</span><span class="o">.</span><span class="n">nexthop</span><span class="p">[</span><span class="n">index</span><span class="p">],</span>
</span><span class='line'>                                              <span class="n">route_data</span><span class="o">.</span><span class="n">via</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>
</span><span class='line'>                                           <span class="p">)</span>
</span><span class='line'>                 <span class="p">)</span>
</span><span class='line'>      <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span> <span class="s">&quot;</span><span class="si">%s</span><span class="s">, via </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">route_data</span><span class="o">.</span><span class="n">nexthop</span><span class="p">,</span> <span class="n">route_data</span><span class="o">.</span><span class="n">via</span><span class="p">)</span> <span class="p">)</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n\n</span><span class="s">&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Config <small>The JSON config</small></h2>

<p>We&rsquo;re going to use JSON again as in the last post, but we&rsquo;re adding a
new property: <code>routes</code>.  This is an array (also known as a <code>list</code> in
<code>python</code>) of routes.  Be careful how you assign the routes&mdash;you could
get more than you bargained for!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;user&quot;</span><span class="o">:</span> <span class="s2">&quot;rancid&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;pass&quot;</span><span class="o">:</span> <span class="s2">&quot;rancid&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;hosts&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>             <span class="s2">&quot;192.168.1.1&quot;</span><span class="p">,</span>
</span><span class='line'>             <span class="s2">&quot;192.168.1.2&quot;</span>
</span><span class='line'>           <span class="p">],</span>
</span><span class='line'>  <span class="s2">&quot;routes&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>              <span class="s2">&quot;8.8.8.0/24&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="s2">&quot;8.8.4.0/24&quot;</span>
</span><span class='line'>            <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Example <small>The /24s to Google&rsquo;s public DNS</small></h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tylerc@mon <span class="o">[</span>08:58:11<span class="o">]</span> <span class="o">[</span>~/scripts/junos<span class="o">]</span>
</span><span class='line'>-&gt; % ./route_stats
</span><span class='line'>Host: 192.168.1.1
</span><span class='line'>Route               Protocol  Next Hop
</span><span class='line'>-----------------------------------------------------------------
</span><span class='line'>
</span><span class='line'>8.8.8.0/24          BGP        38.105.223.211, via ae0.0
</span><span class='line'>                               198.17.53.3, via ae0.0
</span><span class='line'>                               207.86.160.130, via ae0.0
</span><span class='line'>                               207.86.166.98, via ae0.0
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>8.8.4.0/24          BGP        38.105.223.211, via ae0.0
</span><span class='line'>                               198.17.53.3, via ae0.0
</span><span class='line'>                               207.86.160.130, via ae0.0
</span><span class='line'>                               207.86.166.98, via ae0.0
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Host: 192.168.1.2
</span><span class='line'>Route               Protocol  Next Hop
</span><span class='line'>-----------------------------------------------------------------
</span><span class='line'>
</span><span class='line'>8.8.8.0/24          BGP        209.220.18.17, via ae0.0
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>8.8.4.0/24          BGP        209.220.18.17, via ae0.0
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>tylerc@mon <span class="o">[</span>08:58:29<span class="o">]</span> <span class="o">[</span>~/scripts/junos<span class="o">]</span>
</span><span class='line'>-&gt; %
</span></code></pre></td></tr></table></div></figure>


<h2>The End</h2>

<p>As usual, this can be heavily improved.  There are a lot of &ldquo;hacky&rdquo;
things, and since I just learned the majority of the Python I know
today, I&rsquo;m not really up on its stylings.  It seems like a language
that&rsquo;s impossible to style well, but that&rsquo;s for another time.</p>

<p>This is released under the <a href="http://opensource.org/licenses/BSD-2-Clause" title="BSD 2-Clause License">BSD 2-Clause License</a>, so feel free to
modify within the guidlines of the license.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Python to Retrieve Port Status]]></title>
    <link href="http://oss-stack.io//blog/using-python-to-retrieve-port-status/"/>
    <updated>2014-01-24T21:11:31-08:00</updated>
    <id>http://oss-stack.io//blog/using-python-to-retrieve-port-status</id>
    <content type="html"><![CDATA[<blockquote><p>This post is based loosely on <a href="https://twitter.com/networkjanitor" title="Kurt Bales @networkjanitor">@networkjanitor&rsquo;s</a> (Kurt Bales) post
on his experience <a href="http://www.network-janitor.net/2013/11/on-python-networks-and-the-py-junos-eznc-library/" title="ON PYTHON, NETWORKS AND THE PY-JUNOS-EZNC LIBRARY">starting with Python programming</a>.  You should
read his experience as well.</p></blockquote>

<p>In this post, we&rsquo;re going to explore how we can construct a list of
routers and get the port status and the last state change of those ports
very quickly and easily.  This post won&rsquo;t go into the details of how to
use the <a href="https://github.com/Juniper/py-junos-eznc" title="py-junos-eznc">py-junos-eznc</a> API, nor will it discuss <a href="http://www.python.org/" title="Python">Python</a>
fundamentals.  Those are both left as an exercise to the reader (and
perhaps to future posts).</p>

<h2>Router Setup</h2>

<p>Before we start, you need to ensure your router has <code>netconf</code> enabled.
This is easy.  Just log into your router and type:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>configure private
</span><span class='line'><span class="nb">set </span>system services netconf ssh
</span><span class='line'>show | compare
</span><span class='line'>commit check
</span><span class='line'>commit comment <span class="s2">&quot;Enable NetConf&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>py-junos-eznc <small>A Python library to automate Junos</small></h2>

<p><a href="https://twitter.com/nwkautomaniac" title="Jeremy Schulman @nwkautomaniac">@nwkautomaniac</a> (Jeremy Schulman) has done some excellent work
automating Junos.  The currently-supported automation library is
<a href="https://github.com/Juniper/py-junos-eznc" title="py-junos-eznc">py-junos-eznc</a>, which we&rsquo;re going to install and use.</p>

<!-- more -->


<p>Open up your terminal and let&rsquo;s get started!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install -y python python-pip python-yaml
</span><span class='line'><span class="nb">cd</span> ~
</span><span class='line'>mkdir -p scripts/junos <span class="o">&amp;&amp;</span> <span class="nb">cd</span> <span class="nv">$_</span>
</span><span class='line'>pip install git+https://github.com/Juniper/ncclient.git
</span><span class='line'>pip install junos-eznc
</span><span class='line'>touch port_stats
</span><span class='line'>touch config.json
</span><span class='line'>chmod 700 port_stats
</span><span class='line'>chmod 600 config.json
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>This assumes the use of Ubuntu 12.04.  Adjust the package installation
line (the first line above) if you&rsquo;re using a different distribution.</p></blockquote>

<p>That was easy.  Let&rsquo;s (very quickly) test our success by opening the
Python shell and importing a module:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">Python</span> <span class="mf">2.7</span><span class="o">.</span><span class="mi">3</span> <span class="p">(</span><span class="n">default</span><span class="p">,</span> <span class="n">Sep</span> <span class="mi">26</span> <span class="mi">2013</span><span class="p">,</span> <span class="mi">20</span><span class="p">:</span><span class="mo">03</span><span class="p">:</span><span class="mo">06</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="n">GCC</span> <span class="mf">4.6</span><span class="o">.</span><span class="mi">3</span><span class="p">]</span> <span class="n">on</span> <span class="n">linux2</span>
</span><span class='line'><span class="n">Type</span> <span class="s">&quot;help&quot;</span><span class="p">,</span> <span class="s">&quot;copyright&quot;</span><span class="p">,</span> <span class="s">&quot;credits&quot;</span> <span class="ow">or</span> <span class="s">&quot;license&quot;</span> <span class="k">for</span> <span class="n">more</span> <span class="n">information</span><span class="o">.</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">jnpr.junos.op.phyport</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">jnpr.junos</span> <span class="kn">import</span> <span class="n">Device</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>To open a Python shell, just type <code>python</code> at the command line.</p>

<p>If you get an error about &ldquo;<strong>python2.yml</strong>&rdquo; not existing, see issues
<a href="https://github.com/Juniper/py-junos-eznc/issues/86" title="Issue #86">#86</a> and <a href="https://github.com/Juniper/py-junos-eznc/issues/62" title="Issue #62">#62</a> on the project&rsquo;s GitHub page for a temporary
fix.</p></blockquote>

<p>You shouldn&rsquo;t get any errors, and we should be off to the races.</p>

<h2>Configuration <small>config.json</small></h2>

<p>Before we get started, we should define a configuration hierarchy and
methodology.  For this example, we&rsquo;re going to use <a href="http://www.json.org/" title="JSON">JSON, the JavaScript
Object Notation</a>.  It is easy to read and write, and it&rsquo;s implemented
across a large variety of languages.</p>

<p>There are, essentially, three configuration-level variables we want: a
<strong>user name</strong>, a <strong>password</strong>, and a <strong>hostname</strong> or <strong>IP address</strong>.  We
should think about the future, though, and take this one step further:
what if we want to get port status for <em>multiple</em> devices at the same
time?  So we need to change our <strong>hostname</strong> requirement to a <strong>list of
hostnames</strong>.</p>

<p>Now that we know what we need, let&rsquo;s set up our configuration file with
<code>vim</code>:</p>

<blockquote><p>If you&rsquo;re not familiar with <code>vim</code> or Linux in general, you may find my
<a href="http://oss-stack.io//blog/linux-crash-course/" title="Crash Course - Linux">crash course on Linux</a> helpful.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;user&quot;</span><span class="o">:</span> <span class="s2">&quot;rancid&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;pass&quot;</span><span class="o">:</span> <span class="s2">&quot;rancid&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;hosts&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>             <span class="s2">&quot;192.168.1.1&quot;</span><span class="p">,</span>
</span><span class='line'>             <span class="s2">&quot;192.168.1.2&quot;</span>
</span><span class='line'>           <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pretty simple, right?  Two routers, a user name, and a password.</p>

<blockquote><p>I&rsquo;m using the &ldquo;<strong>rancid</strong>&rdquo; user here just for simplicity.  I recommend
you use the lowest-privileged user that is capable of the task
required in the event of a system compromise.</p></blockquote>

<h2>The Meat of It <small>The <code>python</code> script</small></h2>

<p>Now open up <code>port_stats</code> and enter the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'><span class="c"># Author  : Tyler Christiansen</span>
</span><span class='line'><span class="c"># Purpose : Get port state for multiple routers</span>
</span><span class='line'><span class="c"># Date    : 2013-01-21</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">jnpr.junos</span> <span class="kn">import</span> <span class="n">Device</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">jnpr.junos.op.phyport</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'>
</span><span class='line'><span class="n">config_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;config.json&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">config</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">config_file</span><span class="p">)</span>
</span><span class='line'><span class="n">config_file</span><span class="o">.</span><span class="n">close</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">host</span> <span class="ow">in</span> <span class="n">config</span><span class="p">[</span><span class="s">&#39;hosts&#39;</span><span class="p">]:</span>
</span><span class='line'>  <span class="n">rtr</span> <span class="o">=</span> <span class="n">Device</span><span class="p">(</span>
</span><span class='line'>                <span class="n">user</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;user&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="n">password</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;pass&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="n">host</span><span class="o">=</span><span class="n">host</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">rtr</span><span class="o">.</span><span class="n">open</span><span class="p">()</span>
</span><span class='line'>  <span class="n">ports</span> <span class="o">=</span> <span class="n">PhyPortTable</span><span class="p">(</span><span class="n">rtr</span><span class="p">)</span><span class="o">.</span><span class="n">get</span><span class="p">()</span>
</span><span class='line'>  <span class="k">print</span><span class="p">(</span><span class="s">&quot;Host: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">host</span><span class="p">)</span>
</span><span class='line'>  <span class="k">print</span><span class="p">(</span><span class="s">&quot;</span><span class="si">%s%s%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span>
</span><span class='line'>                     <span class="s">&quot;Interface&quot;</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="mi">12</span><span class="p">),</span>
</span><span class='line'>                     <span class="s">&quot;Status&quot;</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="mi">8</span><span class="p">),</span>
</span><span class='line'>                     <span class="s">&quot;Time Since Last Flap&quot;</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="mi">45</span><span class="p">)</span>
</span><span class='line'>                   <span class="p">)</span>
</span><span class='line'>       <span class="p">)</span>
</span><span class='line'>  <span class="k">print</span> <span class="s">&#39;-&#39;</span> <span class="o">*</span> <span class="mi">65</span>
</span><span class='line'>  <span class="k">print</span>
</span><span class='line'>  <span class="k">for</span> <span class="n">port</span> <span class="ow">in</span> <span class="n">ports</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&quot;</span><span class="si">%s%s%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span>
</span><span class='line'>                         <span class="n">port</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="mi">12</span><span class="p">),</span>
</span><span class='line'>                         <span class="n">port</span><span class="o">.</span><span class="n">oper</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="mi">8</span><span class="p">),</span>
</span><span class='line'>                         <span class="n">port</span><span class="o">.</span><span class="n">flapped</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="mi">45</span><span class="p">)</span>
</span><span class='line'>                     <span class="p">)</span>
</span><span class='line'>         <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>There&rsquo;s quite a bit going on in there.</p>

<blockquote><p>The verbosity of <code>python</code> is one the reasons I&rsquo;m not particularly
enchanted with it&mdash;but this is the best tool for the job right now.</p></blockquote>

<h3>Making Sense <small>An explanation of the script</small></h3>

<p>Assume that <strong>line 1</strong> actually starts with the first line of code,
which is <code>from jnpr.junos.op.phyport import *</code>.</p>

<p>Lines <code>1-3</code> import modules and code that are necessary for our
script&mdash;modules to interact with the device, the port, and with our JSON
configuration file.</p>

<p>Lines <code>5-7</code> open the configuration file, read its contents, and parse
the JSON, making a Python object that we can work with later.</p>

<p>Line <code>9</code> starts the real magic: it begins to loop through all of the
hosts we defined under the <code>hosts</code> key in <code>config.json</code>, selecting one
value of the list at a time and giving it a temporary name of <code>host</code>,
and continues until the end of the loop is reached.</p>

<p>Lines <code>10-14</code> use data from our <code>config.json</code> file and the <code>host</code> loop
variable to build a <code>Device</code> object.  This is what will actually build
the connection, and it is necessary to gather information.</p>

<p>Line <code>16</code> opens the <code>netconf</code> session with the router, and line <code>17</code>
gets all of the port information.</p>

<p>Lines <code>18-26</code> build a header, making use of the <code>ljust()</code> function to
build padding to the right and left-justify the text.</p>

<p>The rest of the lines loop through all of the ports on the device,
giving a temporary variable name of <code>port</code> to each, and then printing
out the port name, operation status, and last state change time
following the same length constraints as the header.</p>

<h2>The Result <small>An example in action</small></h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tylerc@mon <span class="o">[</span>07:54:42<span class="o">]</span> <span class="o">[</span>~/scripts/junos<span class="o">]</span>
</span><span class='line'>-&gt; % ./port_stats
</span><span class='line'>Host: 192.168.1.1
</span><span class='line'>Interface   Status  Time Since Last Flap
</span><span class='line'>-----------------------------------------------------------------
</span><span class='line'>
</span><span class='line'>xe-0/0/0    up      2013-11-01 06:37:15 UTC <span class="o">(</span>11w5d 01:17 ago<span class="o">)</span>
</span><span class='line'>xe-0/0/1    up      2013-12-13 06:00:45 UTC <span class="o">(</span>5w5d 01:54 ago<span class="o">)</span>
</span><span class='line'>xe-0/0/2    up      2013-11-01 06:42:30 UTC <span class="o">(</span>11w5d 01:12 ago<span class="o">)</span>
</span><span class='line'>xe-0/0/3    down    2013-11-01 06:14:30 UTC <span class="o">(</span>11w5d 01:40 ago<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Host: 192.168.1.2
</span><span class='line'>Interface   Status  Time Since Last Flap
</span><span class='line'>-----------------------------------------------------------------
</span><span class='line'>
</span><span class='line'>xe-0/0/0    up      2013-12-13 06:14:28 UTC <span class="o">(</span>5w5d 01:40 ago<span class="o">)</span>
</span><span class='line'>xe-0/0/1    up      2013-12-13 06:14:20 UTC <span class="o">(</span>5w5d 01:40 ago<span class="o">)</span>
</span><span class='line'>xe-0/0/2    up      2013-12-18 22:39:35 UTC <span class="o">(</span>4w6d 09:15 ago<span class="o">)</span>
</span><span class='line'>xe-0/0/3    down    2013-12-13 06:14:20 UTC <span class="o">(</span>5w5d 01:40 ago<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>tylerc@mon <span class="o">[</span>07:55:02<span class="o">]</span> <span class="o">[</span>~/scripts/junos<span class="o">]</span>
</span><span class='line'>-&gt; %
</span></code></pre></td></tr></table></div></figure>


<h2>The End</h2>

<p>This script is licensed under the <a href="http://opensource.org/licenses/BSD-2-Clause" title="BSD 2-Clause License">BSD 2-Clause license</a>, while the
<a href="https://github.com/Juniper/py-junos-eznc" title="py-junos-eznc">py-junos-eznc</a> library is licensed under the <a href="http://opensource.org/licenses/Apache-2.0" title="Apache v2.0 License">Apache license</a>.
You&rsquo;re free to modify my code as long as you retain notice that the
original codebase was mine.</p>

<p>Otherwise, enjoy it!</p>

<blockquote><p>Note: I&rsquo;m not a programmer.  I&rsquo;m really not even a systems guy.  To be
honest, I&rsquo;m not sure what you would call me, but this script could be
a whole lot better.  More features, command-line arguments, and so on.
<strong>PLEASE</strong> make every effort to improve it&mdash;and then share your
contributions with the rest of the community.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Centralized Logging and Live Monitoring]]></title>
    <link href="http://oss-stack.io//blog/centralized-logging-and-live-monitoring/"/>
    <updated>2014-01-23T20:23:05-08:00</updated>
    <id>http://oss-stack.io//blog/centralized-logging-and-live-monitoring</id>
    <content type="html"><![CDATA[<p>How great would it be to read all of your router logs from one location?
And to be able to watch the messages scroll by in real time?  This post
will show you not only how to send your router logs to a centralized
location, but it will also show you how to organize the logfiles on your
centralized server.  We&rsquo;ll take it one step further by writing a shell
script that finds the latest logfiles and prints them out.</p>

<h2>Junos Configuration</h2>

<p>I suspect that you&rsquo;re pretty familiar with Junos and probably already
know the configuration necessary to send logfiles to a server, but just
in case, here&rsquo;s the necessary configuration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tyler@lab01# show | compare
</span><span class='line'><span class="o">[</span>edit system<span class="o">]</span>
</span><span class='line'>+   syslog <span class="o">{</span>
</span><span class='line'>+       host 192.168.1.254 <span class="o">{</span>
</span><span class='line'>+           any any;
</span><span class='line'>+           match <span class="s2">&quot;!(.*rancid.*)&quot;</span>;
</span><span class='line'>+           port 514;
</span><span class='line'>+       <span class="o">}</span>
</span><span class='line'>+   <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>master:0<span class="o">}[</span>edit<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>You can copy from <code>[edit system]</code> to the line above <code>{master:0}[edit]</code>
and paste it into your Junos session if you enter the <code>load patch
terminal</code> command from configuration mode.  Just press <code>^D</code>
(control+D) to tell the system you&rsquo;ve finished loading the patch.</p></blockquote>

<p>The above will send every log message, except for messages contianing
the line &ldquo;<strong>rancid</strong>&rdquo;, to the specified server.  I always exclude
&ldquo;<strong>rancid</strong>&rdquo; from log messages as my RANCID configuration is set to pull
configs from equipment every five minutes.</p>

<!-- more -->


<h2>Server Setup</h2>

<p><code>rsyslog</code> is the tool of choice for this article.  It&rsquo;s worth noting
that you can likely obtain the same effect with other syslog servers,
but you&rsquo;ll need to consult the relevant documentation.</p>

<blockquote><p>In this article, the author assumes the use of Ubuntu (and
specifically uses version 12.04).  Other distributions will work but
may use different commands, particularly for package installation.</p>

<p>In addition, if your company already uses a syslog server, you should
continue to use that particular server instead of trying to run
<code>rsyslog</code> next to it.</p></blockquote>

<h3>Installing and Configuring <small><code>rsyslog</code> to the rescue</small></h3>

<p>To get started, you&rsquo;ll need to install <code>rsyslog</code>.  Do this with the
following command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install -y rsyslog
</span></code></pre></td></tr></table></div></figure>


<p>Once installed, open <code>/etc/rsyslog.conf</code> with <code>vim</code> and delete whatever
exists and paste the below configuration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ModLoad</span> imuxsock
</span><span class='line'><span class="nv">$ModLoad</span> imudp
</span><span class='line'><span class="nv">$ModLoad</span> imklog
</span><span class='line'><span class="nv">$UDPServerRun</span> 514
</span><span class='line'><span class="nv">$IncludeConfig</span> /etc/rsyslog.d/*.conf
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>If you don&rsquo;t know how to use <code>vim</code>, I recommend that you read <a href="http://oss-stack.io//blog/linux-crash-course/" title="Crash Course - Linux">my
article on the basics of Linux</a>.</p></blockquote>

<p>The above configuration makes it possible to listen on UDP port
&ldquo;<strong>514</strong>&rdquo;, the port specified in the Junos configuration above, and
includes configuration files in the <code>/etc/rsyslog.d/</code> directory (if it
ends in <code>.conf</code>).  This makes it easier to write configuration files in
a distributed manner.</p>

<p>The next step is to configure a template.  Open up
<code>/etc/rsyslog.d/10-routers.conf</code> and paste the below configuration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$template</span>
</span><span class='line'>DynFile,<span class="s2">&quot;/var/log/netops/%HOSTNAME%/%timegenerated:1:10:date-rfc3339%&quot;</span>
</span><span class='line'><span class="nv">$filegroup</span> noc
</span><span class='line'>:source , !isequal , <span class="s2">&quot;localhost&quot;</span> ?DynFile
</span><span class='line'>:source , !isequal , <span class="s2">&quot;localhost&quot;</span> ~
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>You may have to change <code>localhost</code> to the hostname portion of your
monitoring server&rsquo;s FQDN.  For example, my server&rsquo;s FQDN (as revealed
by the <code>hostname</code> command) is &ldquo;<strong>mon.example.com</strong>&rdquo;.  The hostname
portion of that is &ldquo;<strong>mon</strong>&rdquo;, so I had to change <code>localhost</code> to <code>mon</code>.</p></blockquote>

<p>The above configuration defines a template, <code>DynFile</code>, and essentially
says, &ldquo;If the source of the log message I receive is anything EXCEPT
&rdquo;<strong>localhost</strong>&ldquo;, put a file with the format &rdquo;<strong>YYYY-MM-DD</strong>&ldquo; in a
directory <code>/var/log/netops/%HOSTNAME%/</code>, where %HOSTNAME% is the name of
the message source.  When I create the file, it will have a group of
&rdquo;<strong>noc</strong>&ldquo;.&rdquo;  This results in your logfile being something such as
&ldquo;<strong>/var/log/netops/lab01/2014-01-21</strong>&rdquo; and being readable by members of
the &ldquo;<strong>noc</strong>&rdquo; group.</p>

<blockquote><p>The &ldquo;<strong>noc</strong>&rdquo; group does not exist yet.  Neither does the folder
&ldquo;<strong>/var/log/netops/</strong>&rdquo;.  We&rsquo;re getting to that.</p></blockquote>

<h3>Groups and Folders <small>Final preparations</small></h3>

<p>To get everything up and going, we need to create the &ldquo;<strong>noc</strong>&rdquo; group
and the &ldquo;<strong>/var/log/netops/</strong>&rdquo; folder.  We&rsquo;ll have to add the
appropriate permissions for it as well.  This can all be done relatively
quickly with the following commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo -s
</span><span class='line'>mkdir /var/log/netops
</span><span class='line'>groupadd noc
</span><span class='line'>usermod -a -G noc tyler
</span><span class='line'>chgrp -R noc /var/log/netops
</span><span class='line'>chmod 750 /var/log/netops
</span><span class='line'><span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Don&rsquo;t forget to change &ldquo;<strong>tyler</strong>&rdquo; to your username!</p></blockquote>

<h3>Testing</h3>

<p>After a few minutes, you should be able to see logfiles in your new
directory structure.  See the example output below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tylerc@mon <span class="o">[</span>02:04:30<span class="o">]</span> <span class="o">[</span>~<span class="o">]</span>
</span><span class='line'>-&gt; % ls -R /var/log/netops
</span><span class='line'>/var/log/netops:
</span><span class='line'>lab01
</span><span class='line'>
</span><span class='line'>/var/log/netops/lab01:
</span><span class='line'>2014-01-22
</span><span class='line'>
</span><span class='line'>tylerc@mon <span class="o">[</span>02:04:56<span class="o">]</span> <span class="o">[</span>~<span class="o">]</span>
</span><span class='line'>-&gt; % cat /var/log/netops/lab01/2013-01-22
</span><span class='line'>2014-01-22T00:00:00+00:00 lab01 /usr/sbin/cron<span class="o">[</span>10072<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>newsyslog<span class="o">)</span>
</span><span class='line'>2014-01-22T00:00:00+00:00 lab01 /usr/sbin/cron<span class="o">[</span>10073<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-01-22T00:00:04+00:00 lab01 sshd<span class="o">[</span>10077<span class="o">]</span>: TAC_AUTHEN_STATUS_GETPASS
</span><span class='line'>2014-01-22T00:00:04+00:00 lab01 sshd<span class="o">[</span>10077<span class="o">]</span>: TAC_AUTHEN_STATUS_PASS
</span><span class='line'>2014-01-22T00:00:04+00:00 lab01 sshd<span class="o">[</span>10077<span class="o">]</span>: Accepted password <span class="k">for </span>jim from 192.168.1.50 port 53460 ssh2
</span><span class='line'>2014-01-22T00:00:05+00:00 lab01 mgd<span class="o">[</span>10081<span class="o">]</span>: UI_AUTH_EVENT: Authenticated user <span class="s1">&#39;noc&#39;</span> at permission level <span class="s1">&#39;j-ops-ro&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Unified Live Log Messages <small><code>multitail</code> and <code>bash</code> are</h2>

<p>superheroes</small></p>

<p>The magic of an excellent utility called <code>multitail</code> will let you read
multiple log files at the same time and split them up into multiple
sub-windows if you so desire.  We&rsquo;ll use a simple bash script to
automagically pull all of the current router/switch/firewall/etc logs
in, aggregates them into a single feed and window, and &ldquo;follows&rdquo; them
(outputs their contents to the screen whenever they&rsquo;re data is written
to them).  We&rsquo;ll also add the ability to filter this information so that
you can get only OSPF events or only BGP events or any combination of
any matched phrase.</p>

<h3>Multitail</h3>

<p>First, grab multitail:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install -y multitail
</span></code></pre></td></tr></table></div></figure>


<p>And test it out:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tylerc@mon <span class="o">[</span>02:55:14<span class="o">]</span> <span class="o">[</span>~<span class="o">]</span>
</span><span class='line'>-&gt; % multitail /var/log/netops/lab01/2014-01-22 -I
</span><span class='line'>/var/log/netops/lab02/2014-01-22
</span><span class='line'>2014-01-22T02:31:19+00:00 lab01 xntpd<span class="o">[</span>1223<span class="o">]</span>: NTP Server Unreachable
</span><span class='line'>2014-01-22T02:31:33+00:00 lab01 last message repeated 7 <span class="nb">times</span>
</span><span class='line'>2014-01-22T02:31:35+00:00 lab01 xntpd<span class="o">[</span>1223<span class="o">]</span>: NTP Server Unreachable
</span><span class='line'>2014-01-22T02:35:00+00:00 lab01 /usr/sbin/cron<span class="o">[</span>70084<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-01-22T02:40:00+00:00 lab01 /usr/sbin/cron<span class="o">[</span>70088<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-01-22T02:45:00+00:00 lab01 /usr/sbin/cron<span class="o">[</span>70093<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-01-22T02:45:00+00:00 lab01 /usr/sbin/cron<span class="o">[</span>70094<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>newsyslog<span class="o">)</span>
</span><span class='line'>2014-01-22T02:48:36+00:00 lab01 xntpd<span class="o">[</span>1223<span class="o">]</span>: NTP Server Unreachable
</span><span class='line'>2014-01-22T02:48:52+00:00 lab01 last message repeated 8 <span class="nb">times</span>
</span><span class='line'>2014-01-22T02:50:00+00:00 lab01 /usr/sbin/cron<span class="o">[</span>70099<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-01-22T02:55:00+00:00 lab01 /usr/sbin/cron<span class="o">[</span>70103<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-01-22T02:55:18+00:00 lab01 mgd<span class="o">[</span>11303<span class="o">]</span>: UI_CHILD_STATUS: Cleanup child <span class="s1">&#39;/usr/sbin/lrmuxd&#39;</span>, PID 11321, status 0
</span><span class='line'>2014-01-22T02:55:18+00:00 lab02 mgd<span class="o">[</span>11303<span class="o">]</span>: UI_CHILD_START: Starting child <span class="s1">&#39;/usr/sbin/pgmd&#39;</span>
</span><span class='line'>2014-01-22T02:55:18+00:00 lab02 mgd<span class="o">[</span>11303<span class="o">]</span>: UI_CHILD_STATUS: Cleanup child <span class="s1">&#39;/usr/sbin/pgmd&#39;</span>, PID 11322, status 0
</span><span class='line'>2014-01-22T02:55:19+00:00 lab02 mgd<span class="o">[</span>11303<span class="o">]</span>: UI_CHILD_START: Starting child <span class="s1">&#39;/usr/sbin/sdxd&#39;</span>
</span><span class='line'>2014-01-22T02:55:19+00:00 lab02 mgd<span class="o">[</span>11303<span class="o">]</span>: UI_CHILD_STATUS: Cleanup child <span class="s1">&#39;/usr/sbin/sdxd&#39;</span>, PID 11323, status 0
</span><span class='line'>2014-01-22T02:55:19+00:00 lab02 mgd<span class="o">[</span>11303<span class="o">]</span>: UI_JUNOSCRIPT_CMD: User <span class="s1">&#39;root&#39;</span> used JUNOScript client to run <span class="nb">command</span> <span class="s1">&#39;request-end-session&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>rtail <small>The <code>bash</code> script</small></h3>

<p>Now, let&rsquo;s create a script called <code>rtail</code> (for &ldquo;<strong>r</strong>outer <strong>tail</strong>&rdquo;)
and make it do some magic.  First, create a new text file called <code>rtail</code>
in the <code>/usr/bin/local/</code> directory.</p>

<blockquote><p>For a refresher, the appropriate command would be <code>sudo vim
/usr/bin/local/rtail</code>.  See <a href="http://oss-stack.io//blog/linux-crash-course/" title="Crash Course - Linux">my crash course on the basics of
Linux</a> for more details.</p></blockquote>

<p>Enter the following in the file and save it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="c"># Name    : rtail</span>
</span><span class='line'><span class="c"># Author  : Tyler Christiansen</span>
</span><span class='line'><span class="c"># Purpose : View current and future log messages for routers</span>
</span><span class='line'><span class="c"># Date    : 2013-12-22</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Variable declarations</span>
</span><span class='line'><span class="nv">today</span><span class="o">=</span><span class="k">$(</span>date +<span class="s2">&quot;%Y-%m-%d&quot;</span><span class="k">)</span>
</span><span class='line'><span class="nb">declare</span> -a arg
</span><span class='line'><span class="nv">delim</span><span class="o">=</span><span class="s2">&quot; -I &quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Search for files with today&#39;s date in the log dir</span>
</span><span class='line'><span class="k">for </span>x in <span class="k">$(</span>find /var/log/netops -name *<span class="nv">$today</span>*<span class="k">)</span>; <span class="k">do</span>
</span><span class='line'>  <span class="c"># Add the full path to the $arg array</span>
</span><span class='line'>  <span class="nv">arg</span><span class="o">=(</span> <span class="s2">&quot;${arg[@]}&quot;</span> <span class="s2">&quot;$x&quot;</span> <span class="o">)</span>
</span><span class='line'><span class="k">done</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Implode the array</span>
</span><span class='line'><span class="nv">arg</span><span class="o">=</span><span class="k">$(</span><span class="nb">printf</span> <span class="s2">&quot;${delim}%s&quot;</span> <span class="s2">&quot;${arg[@]}&quot;</span><span class="k">)</span>
</span><span class='line'><span class="nv">arg</span><span class="o">=</span><span class="k">${</span><span class="nv">arg</span><span class="p">:</span><span class="k">${#</span><span class="nv">delim</span><span class="k">}}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># If the user didn&#39;t supply a filter...</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> <span class="nv">$# </span>-eq 0 <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'>  <span class="c"># Then call multitail without flags</span>
</span><span class='line'>  multitail <span class="nv">$arg</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="c"># The user supplied a filter, so call multitail</span>
</span><span class='line'>  <span class="c">#   with the -E flag</span>
</span><span class='line'>  multitail -E <span class="nv">$1</span> <span class="nv">$arg</span>
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, edit permissions to make it owned by the &ldquo;<strong>noc</strong>&rdquo; group and lock
down execution and read/write:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo chgrp noc /usr/local/bin/rtail
</span><span class='line'>sudo chmod 650 /usr/local/bin/rtail
</span></code></pre></td></tr></table></div></figure>


<p>Now you should be able to execute the command.  Supply filters you want
to apply (such as &ldquo;<strong>ospf</strong>&rdquo;) in quotation marks.</p>

<blockquote><p>There is an unfortunate feature missing in <code>multitail</code>: you can&rsquo;t
perform case-insensitive matches from the command invocation.</p>

<p>However, if you start rtail with no filter expressions, you can easily
perform case-insenstive searches by pressing the <code>/</code> key and entering
your text, then selecting the <code>case insensitive</code> option by pressing
the <code>tab</code> key.</p></blockquote>

<p>Here&rsquo;s an example filtering on &ldquo;<strong>cron</strong>&rdquo;:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>2014-01-22T03:53:00+00:00 lab01 /usr/sbin/cron<span class="o">[</span>96133<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>newsyslog<span class="o">)</span>
</span><span class='line'>2014-01-22T03:50:00+00:00 lab03 /usr/sbin/cron<span class="o">[</span>96593<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-09-19T06:25:00+00:00 lab07 /usr/sbin/cron<span class="o">[</span>48036<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-09-26T03:01:00+00:00 lab06 /usr/sbin/cron<span class="o">[</span>98802<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>adjkerntz -a<span class="o">)</span>
</span><span class='line'>2014-09-26T03:40:00+00:00 lab05 /usr/sbin/cron<span class="o">[</span>98767<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-01-22T03:53:00+00:00 lab02 /usr/sbin/cron<span class="o">[</span>53337<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>newsyslog<span class="o">)</span>
</span><span class='line'>2014-01-22T03:50:00+00:00 lab05 /usr/sbin/cron<span class="o">[</span>39761<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-09-14T07:50:00+00:00 lab10 /usr/sbin/cron<span class="o">[</span>98647<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-09-26T03:35:00+00:00 lab08 /usr/sbin/cron<span class="o">[</span>98022<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-09-14T07:55:00+00:00 lab09 /usr/sbin/cron<span class="o">[</span>98586<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-01-22T03:50:00+00:00 lab07 /usr/sbin/cron<span class="o">[</span>11694<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-09-14T05:05:00+00:00 lab02 /usr/sbin/cron<span class="o">[</span>97612<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-09-14T07:55:00+00:00 lab04 /usr/sbin/cron<span class="o">[</span>98640<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>/usr/libexec/atrun<span class="o">)</span>
</span><span class='line'>2014-01-22T03:54:00+00:00 lab02 /usr/sbin/cron<span class="o">[</span>53340<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>newsyslog<span class="o">)</span>
</span><span class='line'>2014-01-22T03:54:00+00:00 lab01 /usr/sbin/cron<span class="o">[</span>96136<span class="o">]</span>: <span class="o">(</span>root<span class="o">)</span> CMD <span class="o">(</span>newsyslog<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>The output in reality looks a bit different.  The screenshot below
shows what it would actually look like.  I&rsquo;ve blacked out actual
hostnames (sorry).</p></blockquote>

<!-- Image -->
<a id="img-1" class="imgModal" href="#imgModal-1" data-toggle="modal">
  <img src="http://oss-stack.io//images/rtail_ex.jpg" width="1407" height="630" title="Click for larger view of rtail example." />
</a>
<div style="float: none;"></div>

<!-- Modal -->
<div class="modal fade" id="imgModal-1" tabindex="-1" role="dialog" aria-labelledby="imgModal-1Label" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title">rtail example</h4>
      </div>
      <div class="modal-body">
        <img src="http://oss-stack.io//images/rtail_ex.jpg" width="2814" height="1260" />
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<h2>The End</h2>

<p>You should definitely check out the <a href="http://www.vanheusden.com/multitail/" title="multitail">multitail webpage</a> and read up
on it a little more.  The bash script above is licensed under the
<a href="http://opensource.org/licenses/BSD-2-Clause" title="BSD 2-Clause License">FreeBSD 2-Clause License</a>, so feel free to modify&mdash;it has a lot of
room for improvement!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Crash Course - Linux]]></title>
    <link href="http://oss-stack.io//blog/linux-crash-course/"/>
    <updated>2014-01-22T20:19:46-08:00</updated>
    <id>http://oss-stack.io//blog/linux-crash-course</id>
    <content type="html"><![CDATA[<p><strong>Linux</strong> is a kernel and often a misnomer for an operating system that
makes the life of engineers signifcantly easier.</p>

<h2>The Relevance of Linux <small>The foundation of OSS</small></h2>

<p>Linux plays a significant role in OSS.  That&rsquo;s not to say that it is the
only show in town&mdash;in fact, FreeBSD may have been even more pivotal in
OSS.  Linux seems to have merely led to wider-spread adoption.</p>

<p>Many of the utilities in the OSS world were designed on and/or for Linux
or FreeBSD.  These utilities include <a href="https://github.com/librenms/librenms" title="LibreNMS">LibreNMS</a>, <a href="http://www.cacti.net/" title="Cacti">Cacti</a>,
<a href="http://www.shrubbery.net/rancid/" title="RANCID">RANCID</a>, <a href="http://www.shrubbery.net/tac_plus/" title="TACACS+">TACACS+</a>, and many more.</p>

<p>In addition, it hosts tools such as <code>perl</code>, <code>sed</code>, <code>grep</code>, and many
others that can make filtering through information much easier.
Languages such as <a href="http://www.python.org/" title="Python">Python</a> and <a href="http://www.perl.org/" title="Perl">Perl</a> make writing administrative
scripts that automate changes or collect information a breeze.</p>

<!-- more -->


<h2>Crash Course <small>The way of the terminal</small></h2>

<p>The terminal will be your friend.  This article isn&rsquo;t here to teach you
the history of Linux or how to use <code>ssh</code>.  I assume that you know how to
SSH to a Linux server or how to open a terminal if you have GUI access
to a Linux system.</p>

<blockquote><p>If you&rsquo;re using Ubuntu 12.04 (and presumably later and possibly
earlier), you can press <code>ctrl+alt+T</code> to open a terminal</p></blockquote>

<p>Now that you have your terminal open, here are a few commands that will
help you out on your journey to becoming an OSS ninja.</p>

<blockquote><p>Before we begin, you should know that a single &ldquo;<strong>dot</strong>&rdquo; or
&ldquo;<strong>period</strong>&rdquo; (<code>.</code>) symbolically represents the current directory you
are in, while two consecutive &ldquo;<strong>dots</strong>&rdquo; or &ldquo;<strong>periods</strong>&rdquo; (<code>..</code>)
represents the parent directory, or the directory above your current
directory.</p>

<p>A term in angled brackets (<code>&lt;</code> and <code>&gt;</code>) is optional.  A term in square
brackets (<code>[</code> and <code>]</code>) is mandatory.</p></blockquote>

<h3>ls <small>list files</small></h3>

<p>Format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ls &lt;options&gt; &lt;directory&gt;
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Options begin with a hyphen (<code>-</code>).</p></blockquote>

<p>Example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant@precise32:/opt<span class="nv">$ </span>ls
</span><span class='line'>oss-conf  tac_plus  vagrant_ruby  VBoxGuestAdditions-4.2.0
</span><span class='line'>vagrant@precise32:/opt<span class="nv">$ </span>ls /
</span><span class='line'>bin   dev  home        lib         media  opt   root  sbin     srv  tmp
</span><span class='line'>vagrant  vmlinuz
</span><span class='line'>boot  etc  initrd.img  lost+found  mnt    proc  run   selinux  sys  usr
</span><span class='line'>var
</span><span class='line'>vagrant@precise32:/opt<span class="nv">$ </span>ls -R tac_plus/
</span><span class='line'>tac_plus/:
</span><span class='line'>bin  etc  include  lib  share
</span><span class='line'>
</span><span class='line'>tac_plus/bin:
</span><span class='line'>tac_plus  tac_pwd
</span><span class='line'>
</span><span class='line'>tac_plus/etc:
</span><span class='line'>tac_plus.conf
</span><span class='line'>
</span><span class='line'>tac_plus/include:
</span><span class='line'>tacacs.h
</span><span class='line'>
</span><span class='line'>tac_plus/lib:
</span><span class='line'>libtacacs.a  libtacacs.la  libtacacs.so  libtacacs.so.1
</span><span class='line'>libtacacs.so.1.0.0
</span><span class='line'>
</span><span class='line'>tac_plus/share:
</span><span class='line'>man  tacacs+
</span><span class='line'>
</span><span class='line'>tac_plus/share/man:
</span><span class='line'>man5  man8
</span><span class='line'>
</span><span class='line'>tac_plus/share/man/man5:
</span><span class='line'>tac_plus.conf.5
</span><span class='line'>
</span><span class='line'>tac_plus/share/man/man8:
</span><span class='line'>tac_plus.8  tac_pwd.8
</span><span class='line'>
</span><span class='line'>tac_plus/share/tacacs+:
</span><span class='line'>do_auth.py  tac_convert  users_guide
</span><span class='line'>vagrant@precise32:/opt<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>If you don&rsquo;t specify a directory, the default is to list the contents
of the current working directory (commonly represented as a single dot
<code>.</code>).</p></blockquote>

<h3>cd <small>change directory</small></h3>

<p>Format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> &lt;options&gt; &lt;destination&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Examples:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant@precise32:/opt<span class="nv">$ </span><span class="nb">cd</span>
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span><span class="nb">cd</span> /opt
</span><span class='line'>vagrant@precise32:/opt<span class="nv">$ </span><span class="nb">cd</span>
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span><span class="nb">cd</span> ..
</span><span class='line'>vagrant@precise32:/home<span class="nv">$ </span><span class="nb">cd</span> ~
</span><span class='line'>vagrant@precise32:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>The tilde (<code>~</code>) is a shortcut meaning &ldquo;<strong>home directory</strong>&rdquo;.  The <code>cd</code>
command by itself with no arguments changes to your home directory.
The two dots (<code>..</code>) represents the parent directory.</p></blockquote>

<h3>cp <small>copy</small></h3>

<p>Format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cp &lt;options&gt; <span class="o">[</span><span class="nb">source</span><span class="o">]</span> <span class="o">[</span>destination<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Examples:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls
</span><span class='line'>postinstall.sh  <span class="nb">test</span>
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>cp /opt/tac_plus/etc/tac_plus.conf .
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls
</span><span class='line'>postinstall.sh  tac_plus.conf  <span class="nb">test</span>
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls /opt
</span><span class='line'>oss-conf  tac_plus  <span class="nb">test  </span>vagrant_ruby  VBoxGuestAdditions-4.2.0
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>cp <span class="nb">test</span> /opt
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls /opt
</span><span class='line'>oss-conf  tac_plus  <span class="nb">test  </span>vagrant_ruby  VBoxGuestAdditions-4.2.0
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>cp -R /opt/tac_plus/ .
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls
</span><span class='line'>postinstall.sh  tac_plus  tac_plus.conf  <span class="nb">test</span>
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls -R tac_plus
</span><span class='line'>tac_plus:
</span><span class='line'>bin  etc  include  lib  share
</span><span class='line'>
</span><span class='line'>tac_plus/bin:
</span><span class='line'>tac_plus  tac_pwd
</span><span class='line'>
</span><span class='line'>tac_plus/etc:
</span><span class='line'>tac_plus.conf
</span><span class='line'>
</span><span class='line'>tac_plus/include:
</span><span class='line'>tacacs.h
</span><span class='line'>
</span><span class='line'>tac_plus/lib:
</span><span class='line'>libtacacs.a  libtacacs.la  libtacacs.so  libtacacs.so.1
</span><span class='line'>libtacacs.so.1.0.0
</span><span class='line'>
</span><span class='line'>tac_plus/share:
</span><span class='line'>man  tacacs+
</span><span class='line'>
</span><span class='line'>tac_plus/share/man:
</span><span class='line'>man5  man8
</span><span class='line'>
</span><span class='line'>tac_plus/share/man/man5:
</span><span class='line'>tac_plus.conf.5
</span><span class='line'>
</span><span class='line'>tac_plus/share/man/man8:
</span><span class='line'>tac_plus.8  tac_pwd.8
</span><span class='line'>
</span><span class='line'>tac_plus/share/tacacs+:
</span><span class='line'>do_auth.py  tac_convert  users_guide
</span><span class='line'>vagrant@precise32:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>The <code>ls</code> command is used to show contents before and after a <code>cp</code>
command.  The <code>-R</code> flag on the <code>cp</code> command means &ldquo;<strong>recursive</strong>&rdquo; and
is necessary to copy entire folders.</p></blockquote>

<h3>mv <small>move</small></h3>

<p>Format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mv &lt;options&gt; <span class="o">[</span><span class="nb">source</span><span class="o">]</span> <span class="o">[</span>destination<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Examples:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls /tmp/
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>mv <span class="nb">test</span> /tmp/
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>mv tac_plus/ /tmp/
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls /tmp
</span><span class='line'>tac_plus  <span class="nb">test</span>
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls
</span><span class='line'>postinstall.sh  tac_plus.conf
</span><span class='line'>vagrant@precise32:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>The <code>mv</code> command is very similar to the <code>cp</code> command, except that it
does not require a recursive option to move folders, and when the file
is moved, it no longer exists at the source location.</p></blockquote>

<h3>rm <small>remove</small></h3>

<p>Format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rm &lt;options&gt; <span class="o">[</span>file|directory<span class="o">]</span> ...
</span></code></pre></td></tr></table></div></figure>


<p>Examples:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls /tmp
</span><span class='line'>tac_plus.conf  <span class="nb">test  </span>test2  test3  test4
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>rm /tmp/tac_plus.conf
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls /tmp
</span><span class='line'><span class="nb">test  </span>test2  test3  test4
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>rm /tmp/test /tmp/test2
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls /tmp
</span><span class='line'>test3  test4
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>rm /tmp/*
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls /tmp
</span><span class='line'>vagrant@precise32:~<span class="err">$</span>
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls -R /tmp/
</span><span class='line'>/tmp/:
</span><span class='line'><span class="nb">test</span>
</span><span class='line'>
</span><span class='line'>/tmp/test:
</span><span class='line'>happy  hello  sample
</span><span class='line'>
</span><span class='line'>/tmp/test/sample:
</span><span class='line'>goodbye  sad
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>rm -r /tmp/test/
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls -R /tmp/
</span><span class='line'>/tmp/:
</span><span class='line'>vagrant@precise32:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>The <code>ls</code> command is used to illustrate the effects of the <code>rm</code>
command.  The <code>-r</code> flag means recursive.  You can specify single
files, multiple files, directories (but must specify the <code>-r</code> flag),
or wildcards (<code>*</code>).</p></blockquote>

<h3>rmdir <small>remove directory</small></h3>

<p>Format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rmdir &lt;options&gt; <span class="o">[</span>directory<span class="o">]</span> ...
</span></code></pre></td></tr></table></div></figure>


<p>Examples:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls -R /tmp
</span><span class='line'>/tmp:
</span><span class='line'><span class="nb">test</span>
</span><span class='line'>
</span><span class='line'>/tmp/test:
</span><span class='line'>hello
</span><span class='line'>
</span><span class='line'>/tmp/test/hello:
</span><span class='line'>goodbye
</span><span class='line'>
</span><span class='line'>/tmp/test/hello/goodbye:
</span><span class='line'>friends
</span><span class='line'>
</span><span class='line'>/tmp/test/hello/goodbye/friends:
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>rmdir /tmp/test/hello/goodbye/friends/
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls -R /tmp/
</span><span class='line'>/tmp/:
</span><span class='line'><span class="nb">test</span>
</span><span class='line'>
</span><span class='line'>/tmp/test:
</span><span class='line'>hello
</span><span class='line'>
</span><span class='line'>/tmp/test/hello:
</span><span class='line'>goodbye
</span><span class='line'>
</span><span class='line'>/tmp/test/hello/goodbye:
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>rmdir -p /tmp/test/hello/goodbye/
</span><span class='line'>rmdir: failed to remove directory <span class="s1">&#39;/tmp&#39;</span>: Permission denied
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls -R /tmp
</span><span class='line'>/tmp:
</span><span class='line'>vagrant@precise32:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Be careful of the &ldquo;<strong>parents</strong>&rdquo; options (<code>-p</code>).  You can easily delete
directories by mistake.</p></blockquote>

<h3>mkdir <small>make directory</small></h3>

<p>Format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir &lt;options&gt; <span class="o">[</span>directory<span class="o">]</span> ...
</span></code></pre></td></tr></table></div></figure>


<p>Examples:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls /tmp
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>mkdir /tmp/test
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls /tmp
</span><span class='line'><span class="nb">test</span>
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>mkdir -p /tmp/test/hello/friend/nice/to/meet/you
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls -R /tmp
</span><span class='line'>/tmp:
</span><span class='line'><span class="nb">test</span>
</span><span class='line'>
</span><span class='line'>/tmp/test:
</span><span class='line'>hello
</span><span class='line'>
</span><span class='line'>/tmp/test/hello:
</span><span class='line'>friend
</span><span class='line'>
</span><span class='line'>/tmp/test/hello/friend:
</span><span class='line'>nice
</span><span class='line'>
</span><span class='line'>/tmp/test/hello/friend/nice:
</span><span class='line'>to
</span><span class='line'>
</span><span class='line'>/tmp/test/hello/friend/nice/to:
</span><span class='line'>meet
</span><span class='line'>
</span><span class='line'>/tmp/test/hello/friend/nice/to/meet:
</span><span class='line'>you
</span><span class='line'>
</span><span class='line'>/tmp/test/hello/friend/nice/to/meet/you:
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>mkdir /tmp/sad /tmp/happy
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls -R /tmp
</span><span class='line'>/tmp:
</span><span class='line'>happy  sad  <span class="nb">test</span>
</span><span class='line'>
</span><span class='line'>/tmp/happy:
</span><span class='line'>
</span><span class='line'>/tmp/sad:
</span><span class='line'>
</span><span class='line'>/tmp/test:
</span><span class='line'>hello
</span><span class='line'>
</span><span class='line'>/tmp/test/hello:
</span><span class='line'>friend
</span><span class='line'>
</span><span class='line'>/tmp/test/hello/friend:
</span><span class='line'>nice
</span><span class='line'>
</span><span class='line'>/tmp/test/hello/friend/nice:
</span><span class='line'>to
</span><span class='line'>
</span><span class='line'>/tmp/test/hello/friend/nice/to:
</span><span class='line'>meet
</span><span class='line'>
</span><span class='line'>/tmp/test/hello/friend/nice/to/meet:
</span><span class='line'>you
</span><span class='line'>
</span><span class='line'>/tmp/test/hello/friend/nice/to/meet/you:
</span><span class='line'>vagrant@precise32:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<h3>pwd <small>present working directory</small></h3>

<p>Format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">pwd</span>
</span></code></pre></td></tr></table></div></figure>


<p>Examples:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant@precise32:~<span class="nv">$ </span><span class="nb">pwd</span>
</span><span class='line'>/home/vagrant
</span><span class='line'>vagrant@precise32:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<h3>sudo <small>super-user do</small></h3>

<blockquote><p><code>sudo</code> doesn&rsquo;t actually mean &ldquo;<strong>super-user do</strong>&rdquo;.  It means &ldquo;<strong>su
do</strong>&rdquo;, but &ldquo;<strong>super-user do</strong>&rdquo; is frequently easier to remember when
you&rsquo;re starting out.</p></blockquote>

<p>Format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo <span class="o">[</span><span class="nb">command</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant@precise32:~<span class="nv">$ </span><span class="nb">cd</span> /usr
</span><span class='line'>vagrant@precise32:/usr<span class="nv">$ </span>ls
</span><span class='line'>bin  games  include  lib  <span class="nb">local  </span>sbin  share  src
</span><span class='line'>vagrant@precise32:/usr<span class="nv">$ </span>touch <span class="nb">test</span>
</span><span class='line'>touch: cannot touch <span class="s1">&#39;test&#39;</span>: Permission denied
</span><span class='line'>vagrant@precise32:/usr<span class="nv">$ </span>sudo touch <span class="nb">test</span>
</span><span class='line'>vagrant@precise32:/usr<span class="nv">$ </span>ls
</span><span class='line'>bin  games  include  lib  <span class="nb">local  </span>sbin  share  src  <span class="nb">test</span>
</span><span class='line'>vagrant@precise32:/usr<span class="nv">$ </span>ls -l <span class="nb">test</span>
</span><span class='line'>-rw-r--r-- 1 root root 0 Jan 19 01:49 <span class="nb">test</span>
</span><span class='line'>vagrant@precise32:/usr<span class="nv">$ </span>whoami
</span><span class='line'>vagrant
</span><span class='line'>vagrant@precise32:/usr<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><code>sudo</code> is useful to run commands that require root privileges.  It can
also be configured such that a user can perform certain actions with
elevated privileges but not all.</p>

<p>The above example uses numerous commands you&rsquo;ve learned so far to help
identify the effects of <code>sudo</code>.  The <code>-l</code> option for <code>ls</code> is for
&ldquo;<strong>long</strong>&rdquo;, which shows the user and group who owns the file.  In this
case, it is owned by the &ldquo;<strong>root</strong>&rdquo; user and group, even though you
are &ldquo;<strong>vagrant</strong>&rdquo; (or whatever users you happen to be) as identified
by the <code>whoami</code> command.</p>

<p>This shows one of the &ldquo;gotchas&rdquo; of <code>sudo</code>: it creates files as the
<code>root</code> user.</p></blockquote>

<h3>curl <small>client url request library</small></h3>

<p>Format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl &lt;options&gt; <span class="o">[</span>target<span class="o">]</span> ...
</span></code></pre></td></tr></table></div></figure>


<p>Examples:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls
</span><span class='line'>postinstall.sh
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>curl -O
</span><span class='line'>http://serpentorslair.com/wp-content/uploads/2013/10/darth-vader-16086-1680x1050.jpg
</span><span class='line'>  % Total    % Received % Xferd  Average Speed   Time    Time     Time   Current
</span><span class='line'>                                 Dload  Upload   Total   Spent    Left   Speed
</span><span class='line'>100  397k  100  397k    0     0   305k      0  0:00:01  0:00:01 --:--:-- 493k
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls
</span><span class='line'>darth-vader-16086-1680x1050.jpg  postinstall.sh
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>curl -o vader.jpg
</span><span class='line'>http://serpentorslair.com/wp-content/uploads/2013/10/darth-vader-16086-1680x1050.jpg
</span><span class='line'>  % Total    % Received % Xferd  Average Speed   Time    Time     Time   Current
</span><span class='line'>                                 Dload  Upload   Total   Spent    Left   Speed
</span><span class='line'>100  397k  100  397k    0     0   276k      0  0:00:01  0:00:01 --:--:-- 484k
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls
</span><span class='line'>darth-vader-16086-1680x1050.jpg  postinstall.sh  vader.jpg
</span><span class='line'>vagrant@precise32:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<h3>tar <small>tape archive</small></h3>

<p>Format:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tar &lt;options&gt; <span class="o">[</span>archive<span class="o">]</span> &lt;files|directories&gt; ...
</span></code></pre></td></tr></table></div></figure>


<p>Examples:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls
</span><span class='line'>hello  test1  test3  world
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>tar -czvf
</span><span class='line'>.bash_history              hello                      test1
</span><span class='line'>.viminfo
</span><span class='line'>.bash_logout               .profile                   test3
</span><span class='line'>world
</span><span class='line'>.bashrc                    .ssh/                      .vbox_version
</span><span class='line'>.cache/                    .sudo_as_admin_successful  .veewee_version
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>tar -czvf home_dir.tar.gz test1 hello test3 world
</span><span class='line'>test1
</span><span class='line'>hello
</span><span class='line'>test3
</span><span class='line'>world
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls
</span><span class='line'>hello  home_dir.tar.gz  test1  test3  world
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>rm hello test1 test3 world
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls
</span><span class='line'>home_dir.tar.gz
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>tar -tzvf home_dir.tar.gz
</span><span class='line'>-rw-rw-r-- vagrant/vagrant   0 2014-01-19 02:26 test1
</span><span class='line'>-rw-rw-r-- vagrant/vagrant   0 2014-01-19 02:26 hello
</span><span class='line'>-rw-rw-r-- vagrant/vagrant   0 2014-01-19 02:26 test3
</span><span class='line'>-rw-rw-r-- vagrant/vagrant   0 2014-01-19 02:26 world
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls
</span><span class='line'>home_dir.tar.gz
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>tar -xzvf home_dir.tar.gz
</span><span class='line'>test1
</span><span class='line'>hello
</span><span class='line'>test3
</span><span class='line'>world
</span><span class='line'>vagrant@precise32:~<span class="nv">$ </span>ls
</span><span class='line'>hello  home_dir.tar.gz  test1  test3  world
</span><span class='line'>vagrant@precise32:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><code>tar</code> has a number of important options.  The &ldquo;<strong>verbose</strong>&rdquo; (<code>-v</code>)
flag prints output to your screen, the &ldquo;<strong>file</strong>&rdquo; (<code>-f</code>) tells <code>tar</code>
which file, and the &ldquo;<strong>gzip</strong>&rdquo; (<code>-z</code>) tells <code>tar</code> to use &ldquo;<strong>gzip</strong>&rdquo;
compression.</p>

<p>There are three action flags used as well.  They are:</p>

<p>&ldquo;<strong>create</strong>&rdquo; (<code>-c</code>): create the archive</p>

<p>&ldquo;<strong>extract</strong>&rdquo; (<code>-x</code>): extract the archive</p>

<p>&ldquo;<strong>list</strong>&rdquo; (<code>-t</code>): list the contents of the archive</p></blockquote>

<h2>vim <small>Editing Files</small></h2>

<p><code>vim</code> is a power text-editing utility that can be difficult to master.
Using it for basic purposes, though, is easy.  Here&rsquo;s a short list of
commands:</p>

<ul>
<li><code>i</code>: enter insert mode at the current curson position</li>
<li><code>a</code>: enter insert mode one character after the current cursor position</li>
<li><code>o</code>: enter insert mode at the next line</li>
<li><code>dd</code>: delete the current line</li>
<li><code>yy</code>: copy the current line</li>
<li><code>:</code>: enter command mode</li>
<li><code>:wq</code>: enter command mode and write and close the file</li>
<li><code>:w</code>: enter command mode and write the file</li>
<li><code>:q!</code>: enter command mode and close the file, discarding any unsaved
changes</li>
<li><code>:%s/&lt;old&gt;/&lt;new&gt;/g</code>: enter command mode and use the subtitution
command, replacing all instances of &ldquo;<strong><old></strong>&rdquo; with &ldquo;<strong><new></strong>&rdquo;
(note: leave the angled brackets off!)</li>
<li><code>[escape]</code>: pressing the <code>[escape]</code> key aborts the currently entered
partial command and/or exits command mode</li>
</ul>


<blockquote><p><code>vim</code> is a great tool, but it is difficult to show in a text-based
tutorial how it&rsquo;s used (irony, huh?).  I strongly recommend <a href="http://vim-adventures.com/" title="VIM Adventures">VIM
Adventures</a> to learn how to use <code>vim</code> properly.</p></blockquote>

<h2>The End</h2>

<p>This was only a crash course on the very bare necessities you must
understand to use Linux.  More advanced tools, such as <code>sed</code>, <code>awk</code>,
<code>perl</code>, <code>cut</code>, and more require entire posts to explain properly.</p>

<p>This will get you on your way.  Look for future articles in the &ldquo;<strong>Crash
Course</strong>&rdquo; series.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TACACS+ [3/3] - Nexus Configuration]]></title>
    <link href="http://oss-stack.io//blog/tacacs-nexus-configuration/"/>
    <updated>2014-01-21T19:43:00-08:00</updated>
    <id>http://oss-stack.io//blog/tacacs-nexus-configuration</id>
    <content type="html"><![CDATA[<blockquote><p>Note: This is Part 3 in a series of posts on TACACS+ installation and
deployment.</p>

<p>You should read these posts in order if you&rsquo;re not familiar with
TACACS+:</p>

<ul>
<li><a href="http://oss-stack.io//blog/tacacs-introduction-to-aaa/" title="TACACS+ [0/3] - Introduction to AAA">TACACS+ [0/3] &ndash; Introduction to AAA</a></li>
<li><a href="http://oss-stack.io//blog/tacacs-downloading-and-compiling/" title="TACACS+ [1/3] - Downloading and Compiling">TACACS+ [1/3] &ndash; Downloading and Compiling</a></li>
<li><a href="http://oss-stack.io//blog/tacacs-junos-configuration/" title="TACACS+ [2/3] - Junos Configuration">TACACS+ [2/3] &ndash; Junos Configuration</a></li>
</ul>
</blockquote>

<p>In <a href="http://oss-stack.io//blog/tacacs-junos-configuration/" title="TACACS+ [2/3] - Junos Configuration">Part 2</a>, we covered the configuration of a Juniper Networks
device to authenticate against a TACACS+ server.  In this part, we&rsquo;ll
cover the configuration necessary for a Cisco Nexus switch running NXOS.</p>

<h2>TACACS+ Configuration</h2>

<p>Just like in <a href="http://oss-stack.io//blog/tacacs-junos-configuration/" title="TACACS+ [2/3] - Junos Configuration">Part 2</a>, we&rsquo;re going to be starting with the TACACS+
configuration.  Most of the work is already done for us&mdash;we&rsquo;ll be adding
another service the same way we did previously and the configuration
will be complete.</p>

<p>Start by opening the TACACS+ configuration file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /opt/oss-conf
</span><span class='line'>vim tac_plus/tac_plus.conf
</span></code></pre></td></tr></table></div></figure>


<p>Next, find the <code>group</code> section for &ldquo;<strong>engineers</strong>&rdquo;.  You&rsquo;ll want to make
the section look like it does below by adding the new <code>service</code> stanza:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">group</span> <span class="o">=</span> engineers <span class="o">{</span>
</span><span class='line'>  default <span class="nv">service</span> <span class="o">=</span> permit
</span><span class='line'>  <span class="nv">service</span> <span class="o">=</span> junos-exec <span class="o">{</span>
</span><span class='line'>    <span class="nb">local</span>-user-name <span class="o">=</span> admin
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="nv">service</span> <span class="o">=</span> <span class="nb">exec</span> <span class="o">{</span>
</span><span class='line'>    shell:roles<span class="o">=</span><span class="s2">&quot;\&quot;network-admin\&quot;&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Remember: press <code>i</code> to enter insert mode, the <code>[escape]</code> key to exit
insert mode, and <code>:wq</code> to save and close the file.</p></blockquote>

<!-- more -->


<p>Next, we&rsquo;ll add and commit the changes to our configuration repository:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add tac_plus/tac_plus.conf
</span><span class='line'>git commit -m <span class="s1">&#39;add nxos permissions for engineers&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Remember that we&rsquo;re adding commits for each minor thing we do (that
adds complete functionality for a given need).  This is generally
considered a best practice.</p></blockquote>

<p>Next, let&rsquo;s set the <code>noc</code> group to have read-only access:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim tac_plus/tac_plus.conf
</span></code></pre></td></tr></table></div></figure>


<p>Add the necessary lines below to match your configuration to this
example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">group</span> <span class="o">=</span> noc <span class="o">{</span>
</span><span class='line'>  default <span class="nv">service</span> <span class="o">=</span> permit
</span><span class='line'>  <span class="nv">service</span> <span class="o">=</span> junos-exec <span class="o">{</span>
</span><span class='line'>    <span class="nb">local</span>-user-name <span class="o">=</span> noc
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="nv">service</span> <span class="o">=</span> <span class="nb">exec</span> <span class="o">{</span>
</span><span class='line'>    shell:roles<span class="o">=</span><span class="s2">&quot;\&quot;network-operator\&quot;&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And add and commit the changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add tac_plus/tac_plus.conf
</span><span class='line'>git commit -m <span class="s1">&#39;add nxos permissions for noc techs&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Configuring NXOS</h2>

<p>The NXOS configuration is shown below. Note that you&rsquo;ll need to replace
IP addresses with your own relevant values.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>lab03<span class="o">(</span>config<span class="o">)</span><span class="c"># sh run tacacs+</span>
</span><span class='line'>
</span><span class='line'>!Command: show running-config tacacs+
</span><span class='line'>!Time: Sat Jan 18 22:51:01 2014
</span><span class='line'>
</span><span class='line'>version 5.2<span class="o">(</span>1<span class="o">)</span>N1<span class="o">(</span>3<span class="o">)</span>
</span><span class='line'>feature tacacs+
</span><span class='line'>
</span><span class='line'>ip tacacs <span class="nb">source</span>-interface mgmt0
</span><span class='line'>tacacs-server host 192.168.1.254 key 7 <span class="s2">&quot;!e-q0v3_l4M4s5#&quot;</span>
</span><span class='line'>aaa group server tacacs+ lab
</span><span class='line'>    server 192.168.1.254
</span><span class='line'>    use-vrf management
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>lab03<span class="o">(</span>config<span class="o">)</span><span class="c">#</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Start under the <code>version 5.2(1)N1(3)</code> line.  Since we&rsquo;re using
preexisting groups, you don&rsquo;t need to create them like we did with
Junos.</p></blockquote>

<h2>Restart TACACS+</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo stop tac_plus
</span><span class='line'>sudo start tac_plus
</span></code></pre></td></tr></table></div></figure>


<h3>Test the NOC Tech <small>His name is Jim</small></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh jim@192.168.1.3
</span></code></pre></td></tr></table></div></figure>


<p>You should be able to run commands such as <code>show run</code>, <code>ping</code>, and
<code>traceroute</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>lab03# show vlan summary
</span><span class='line'>
</span><span class='line'>Number of existing VLANs           : 20
</span><span class='line'>Number of existing user VLANs      : 20
</span><span class='line'>Number of existing extended VLANs  : 0
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>lab03# show running-config tacacs+
</span><span class='line'>
</span><span class='line'>!Command: show running-config tacacs+
</span><span class='line'>!Time: Sat Jan 18 23:45:22 2014
</span><span class='line'>
</span><span class='line'>version 5.2<span class="o">(</span>1<span class="o">)</span>N1<span class="o">(</span>3<span class="o">)</span>
</span><span class='line'>feature tacacs+
</span><span class='line'>
</span><span class='line'>ip tacacs <span class="nb">source</span>-interface mgmt0
</span><span class='line'>tacacs-server host 192.168.1.254 key 7 <span class="s2">&quot;!e-q0v3_l4M4s5#&quot;</span>
</span><span class='line'>aaa group server tacacs+ lab
</span><span class='line'>    server 192.168.1.254
</span><span class='line'>    use-vrf management
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>lab03# ping 192.168.1.1 vrf management
</span><span class='line'>PING 192.168.1.1 <span class="o">(</span>192.168.1.1<span class="o">)</span>: 56 data bytes
</span><span class='line'>64 bytes from 192.168.1.1: <span class="nv">icmp_seq</span><span class="o">=</span>0 <span class="nv">ttl</span><span class="o">=</span>63 <span class="nb">time</span><span class="o">=</span>1.494 ms
</span><span class='line'>64 bytes from 192.168.1.1: <span class="nv">icmp_seq</span><span class="o">=</span>1 <span class="nv">ttl</span><span class="o">=</span>63 <span class="nb">time</span><span class="o">=</span>2.047 ms
</span><span class='line'>64 bytes from 192.168.1.1: <span class="nv">icmp_seq</span><span class="o">=</span>2 <span class="nv">ttl</span><span class="o">=</span>63 <span class="nb">time</span><span class="o">=</span>1.099 ms
</span><span class='line'>64 bytes from 192.168.1.1: <span class="nv">icmp_seq</span><span class="o">=</span>3 <span class="nv">ttl</span><span class="o">=</span>63 <span class="nb">time</span><span class="o">=</span>1.29 ms
</span><span class='line'>64 bytes from 192.168.1.1: <span class="nv">icmp_seq</span><span class="o">=</span>4 <span class="nv">ttl</span><span class="o">=</span>63 <span class="nb">time</span><span class="o">=</span>1.1 ms
</span><span class='line'>
</span><span class='line'>--- 192.168.1.1 ping statistics ---
</span><span class='line'>5 packets transmitted, 5 packets received, 0.00% packet loss
</span><span class='line'>round-trip min/avg/max <span class="o">=</span> 1.099/1.405/2.047 ms
</span><span class='line'>lab03# traceroute 192.168.1.1 vrf management
</span><span class='line'>traceroute to 192.168.1.1 <span class="o">(</span>192.168.1.1<span class="o">)</span>, 30 hops max, 40 byte packets
</span><span class='line'> 1  192.168.1.1 <span class="o">(</span>192.168.1.1<span class="o">)</span>  1.567 ms  1.713 ms  1.323 ms
</span><span class='line'>lab03#
</span></code></pre></td></tr></table></div></figure>


<h2>Fine-grained Control</h2>

<p>Nexus switches don&rsquo;t seem to allow fine-grained control of which
commands can be executed, unlike Junos and IOS.  That or I haven&rsquo;t found
the special sauce yet.</p>

<h2>The End <small>Finally!</small></h2>

<p>This post concludes the three-part series on TACACS+, but don&rsquo;t worry!
There will be more posts exploring other features and additional vendor
integration.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TACACS+ [2/3] - Junos Configuration]]></title>
    <link href="http://oss-stack.io//blog/tacacs-junos-configuration/"/>
    <updated>2014-01-20T19:33:09-08:00</updated>
    <id>http://oss-stack.io//blog/tacacs-junos-configuration</id>
    <content type="html"><![CDATA[<blockquote><p>Note: This is Part 2 in a series of posts on TACACS+ installation and
deployment.</p>

<p>You should start with <a href="http://oss-stack.io//blog/tacacs-introduction-to-aaa/" title="TACACS+ [0/3] - Introduction to AAA">the special precursor</a>, followed by <a href="http://oss-stack.io//blog/tacacs-downloading-and-compiling/" title="TACACS+ [1/3] - Downloading and Compiling">Part 1:
Downloading and Compiling</a>.</p></blockquote>

<p>One of major vendors that supports TACACS+ is Juniper Networks.
Enabling TACACS+ for a Juniper Networks device is simple.  It&rsquo;s made
even easier by the fact that the configuration is the same across their
major routing, switching, and security platforms.</p>

<blockquote><p>Note: Some platforms, such as the MAG series (which runs IVE), do not
support TACACS+ authentication.</p></blockquote>

<h2>TACACS+ Configuration</h2>

<p>We&rsquo;ll start with the TACACS+ configuration.  We already have the base
configuration from <a href="http://oss-stack.io//blog/tacacs-introduction-to-aaa/" title="TACACS+ [0/3] - Introduction to AAA">part 1</a>.  We&rsquo;re only going to be modifying the
sections of the configuration labeled as <code>group</code>.  This is for
scalability reasons&mdash;as your users grow, you can simply add new users to
the appropriate group instead of redefining their permissions for every
user.</p>

<p>Let&rsquo;s start with the <code>engineers</code> group.  We&rsquo;re going to add a simple
section to the group that will grant members the same permissions as a
local Junos user called &ldquo;<strong>admin</strong>&rdquo;.</p>

<!-- more -->


<p>Start by opening the file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /opt/oss-conf
</span><span class='line'>vim tac_plus/tac_plus.conf
</span></code></pre></td></tr></table></div></figure>


<p>Now, insert the lines below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">group</span> <span class="o">=</span> engineers <span class="o">{</span>
</span><span class='line'>  default <span class="nv">service</span> <span class="o">=</span> permit
</span><span class='line'>  <span class="nv">service</span> <span class="o">=</span> junos-exec <span class="o">{</span>
</span><span class='line'>    <span class="nb">local</span>-user-name <span class="o">=</span> admin
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Remember: press <code>i</code> to enter insert mode, the <code>[escape]</code> key to exit
insert mode, and <code>:wq</code> to save and close the file.</p></blockquote>

<p>Next we&rsquo;ll add and commit the changes to our fancy configuration
revision repository:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add tac_plus/tac_plus.conf
</span><span class='line'>git commit -m <span class="s1">&#39;add junos permissions for engineers&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, let&rsquo;s fix up the <code>noc</code> group, which will map to a local Junos user
claled &ldquo;<strong>noc</strong>&rdquo;.  Once again, open the file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim tac_plus/tac_plus.conf
</span></code></pre></td></tr></table></div></figure>


<p>Add the following lines:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="nv">group</span> <span class="o">=</span> noc <span class="o">{</span>
</span><span class='line'>  default <span class="nv">service</span> <span class="o">=</span> permit
</span><span class='line'>  <span class="nv">service</span> <span class="o">=</span> junos-exec <span class="o">{</span>
</span><span class='line'>    <span class="nb">local</span>-user-name <span class="o">=</span> noc
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And add the changes and commit them in git:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add tac_plus/tac_plus.conf
</span><span class='line'>git commit -m <span class="s1">&#39;add junos permissions for engineers&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>You could have just done this all together, but when you work with
revision control, you generally want to break changes up into the
smallest logical blocks possible.  This makes rolling back changes
much easier and less invasive.</p></blockquote>

<p>That&rsquo;s all there is to it for the TACACS+ configuration!  We&rsquo;ll cirlce
back later to show ways to allow specific commands later&mdash;after we show
the Junos configuration</p>

<h2>Configuring Junos</h2>

<p>The Junos configuration is shown below.  Note that you&rsquo;ll need to
replace IP addresses with your own relevant values.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@lab01# show | compare
</span><span class='line'><span class="o">[</span>edit system<span class="o">]</span>
</span><span class='line'>+  authentication-order <span class="o">[</span> tacplus password <span class="o">]</span>;
</span><span class='line'>+  tacplus-server <span class="o">{</span>
</span><span class='line'>+      192.168.1.254 <span class="o">{</span>
</span><span class='line'>+          port 49;
</span><span class='line'>+          secret <span class="s2">&quot;$9$J0GUjTQntuO.P0BRhvMJGUHTF9A0RcyKMZUHkTQSrlMWL&quot;</span>; <span class="c">## SECRET-DATA</span>
</span><span class='line'>+          single-connection;
</span><span class='line'>+          <span class="nb">source</span>-address 192.168.1.1;
</span><span class='line'>+      <span class="o">}</span>
</span><span class='line'>+  <span class="o">}</span>
</span><span class='line'>+  accounting <span class="o">{</span>
</span><span class='line'>+      events <span class="o">[</span> login interactive-commands <span class="o">]</span>;
</span><span class='line'>+      destination <span class="o">{</span>
</span><span class='line'>+          tacplus;
</span><span class='line'>+      <span class="o">}</span>
</span><span class='line'>+  <span class="o">}</span>
</span><span class='line'>+  login <span class="o">{</span>
</span><span class='line'>+      class admin <span class="o">{</span>
</span><span class='line'>+          login-alarms;
</span><span class='line'>+          permissions all;
</span><span class='line'>+      <span class="o">}</span>
</span><span class='line'>+      class noc <span class="o">{</span>
</span><span class='line'>+          permissions <span class="o">[</span> view view-configuration <span class="o">]</span>;
</span><span class='line'>+      <span class="o">}</span>
</span><span class='line'>+      user engineers <span class="o">{</span>
</span><span class='line'>+          full-name <span class="s2">&quot;TACACS+ - Engineers&quot;</span>;
</span><span class='line'>+          class admin;
</span><span class='line'>+          authentication <span class="o">{</span>
</span><span class='line'>+              encrypted-password <span class="s2">&quot;$1$2FA/QHsx$Os2dyH/PdLiD9t96flygS/&quot;</span>; <span class="c">## SECRET-DATA</span>
</span><span class='line'>+          <span class="o">}</span>
</span><span class='line'>+      <span class="o">}</span>
</span><span class='line'>+      user noc <span class="o">{</span>
</span><span class='line'>+          full-name <span class="s2">&quot;TACACS+ - NOC Techs&quot;</span>;
</span><span class='line'>+          class noc;
</span><span class='line'>+          authentication <span class="o">{</span>
</span><span class='line'>+              encrypted-password <span class="s2">&quot;$1$4wt52bTA$niTEoQJBfp3maQkVTvCI60&quot;</span>; <span class="c">## SECRET-DATA</span>
</span><span class='line'>+          <span class="o">}</span>
</span><span class='line'>+      <span class="o">}</span>
</span><span class='line'>+  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>master:0<span class="o">}[</span>edit<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>The configuration above is in patch form.  You can load it by copying
everything form <code>[edit system]</code> to the last line with a <code>+</code>, then
entering configuration mode in your Juniper device, and typing <code>load
patch terminal</code>, then pasting the patch and pressing <code>^D</code> (control+D).</p></blockquote>

<h2>Restart TACACS+</h2>

<p>The next step is to restart TACACS+ if it&rsquo;s running.  Check to see if
it&rsquo;s running:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo status tac_plus
</span></code></pre></td></tr></table></div></figure>


<p>If it&rsquo;s not running:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo start tac_plus
</span></code></pre></td></tr></table></div></figure>


<p>If it is running:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo stop tac_plus
</span><span class='line'>sudo start tac_plus
</span></code></pre></td></tr></table></div></figure>


<p>Now, test your new configuration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh jim@192.168.1.1
</span></code></pre></td></tr></table></div></figure>


<p>Junos should show you logged in as the user &ldquo;<strong>jim</strong>&rdquo;.  You should be
able to use show commands, but not change configuration.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>jim@lab02&gt; show vlans summary
</span><span class='line'>
</span><span class='line'>VLANs summary:
</span><span class='line'>    Total: 27,  Configured VLANs: 26
</span><span class='line'>    Internal VLANs: 1,  Temporary VLANs: 0
</span><span class='line'>
</span><span class='line'>Dot1q VLANs summary:
</span><span class='line'>    Total: 27, Tagged VLANs: 26, Untagged VLANs: 1
</span><span class='line'>
</span><span class='line'><span class="o">{</span>master:0<span class="o">}</span>
</span><span class='line'>jim@lab02&gt; show configuration routing-options
</span><span class='line'>static <span class="o">{</span>
</span><span class='line'>    route 0.0.0.0/0 next-hop 192.168.1.1;
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>master:0<span class="o">}</span>
</span><span class='line'>jim@lab02&gt; ping
</span><span class='line'>           ^
</span><span class='line'>unknown command.
</span><span class='line'>jim@lab02&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>Extending Permissions</h2>

<p>You&rsquo;ll probably notice that although the &ldquo;<strong>jim</strong>&rdquo; user can run some
show commands and view the configuration, he can&rsquo;t use commands such as
<code>ping</code> and <code>traceroute</code>.  Let&rsquo;s fix that now.  Let&rsquo;s also prevent
members of the &ldquo;<strong>noc</strong>&rdquo; group from viewing the configuration under the
<code>system</code> hierarchy.</p>

<p>To start, let&rsquo;s follow the same steps we&rsquo;ve been following.  Don&rsquo;t
forget to see the note above for a refresher on <code>vim</code> if necessary!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /opt/oss-conf
</span><span class='line'>vim tac_plus/tac_plus.conf
</span></code></pre></td></tr></table></div></figure>


<p>Now, find the &ldquo;<strong>noc</strong>&rdquo; group and make it look like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">group</span> <span class="o">=</span> noc <span class="o">{</span>
</span><span class='line'>  default <span class="nv">service</span> <span class="o">=</span> permit
</span><span class='line'>  <span class="nv">service</span> <span class="o">=</span> junos-exec <span class="o">{</span>
</span><span class='line'>    <span class="nb">local</span>-user-name <span class="o">=</span> noc
</span><span class='line'>    allow-commands1<span class="o">=</span><span class="s2">&quot;ping.*&quot;</span>
</span><span class='line'>    allow-commands2<span class="o">=</span><span class="s2">&quot;traceroute.*&quot;</span>
</span><span class='line'>    deny-configuration1<span class="o">=</span><span class="s2">&quot;system.*&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add and commit to your repository:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add tac_plus/tac_plus.conf
</span><span class='line'>git commit -m <span class="s1">&#39;fix command auth for noc group&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And restart tac_plus:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo stop tac_plus
</span><span class='line'>sudo start tac_plus
</span></code></pre></td></tr></table></div></figure>


<h3>The results</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> jim@lab01&gt; ping 192.168.1.1 rapid
</span><span class='line'> PING 192.168.1.1 <span class="o">(</span>192.168.1.1<span class="o">)</span>: 56 data bytes
</span><span class='line'> !!!!!
</span><span class='line'> --- 192.168.1.1 ping statistics ---
</span><span class='line'> 5 packets transmitted, 5 packets received, 0% packet loss
</span><span class='line'>round-trip min/avg/max/stddev <span class="o">=</span> 0.305/1.768/4.718/1.598 ms
</span><span class='line'>
</span><span class='line'><span class="o">{</span>master:0<span class="o">}</span>
</span><span class='line'>jim@lab02&gt; traceroute 192.168.1.1
</span><span class='line'>traceroute to 192.168.1.1 <span class="o">(</span>192.168.1.1<span class="o">)</span>, 30 hops max, 40 byte packets
</span><span class='line'> 1  192.168.2.1 <span class="o">(</span>192.168.2.1<span class="o">)</span>  91.231 ms  90.658 ms  95.165 ms
</span><span class='line'> 2  192.168.1.1 <span class="o">(</span>192.168.1.1<span class="o">)</span>  95.484 ms  94.621 ms  103.436 ms
</span><span class='line'>
</span><span class='line'><span class="o">{</span>master:0<span class="o">}</span>
</span><span class='line'>jim@lab02&gt; show configuration system
</span><span class='line'>                                     ^
</span><span class='line'>permission denied.
</span><span class='line'>
</span><span class='line'><span class="o">{</span>master:0<span class="o">}</span>
</span><span class='line'>jim@lab02&gt; show cli authorization
</span><span class='line'>Current user: <span class="s1">&#39;noc&#39;</span> login: <span class="s1">&#39;rancid&#39;</span> class <span class="s1">&#39;noc&#39;</span>
</span><span class='line'>Permissions:
</span><span class='line'>    view        -- Can view current values and statistics
</span><span class='line'>    view-configuration-- Can view all configuration <span class="o">(</span>not including secrets<span class="o">)</span>
</span><span class='line'>Individual <span class="nb">command </span>authorization:
</span><span class='line'>    Allow regular expression: <span class="o">(</span>ping.*|traceroute.*<span class="o">)</span>
</span><span class='line'>    Deny regular expression: none
</span><span class='line'>    Allow configuration regular expression: none
</span><span class='line'>    Deny configuration regular expression: <span class="o">(</span>system.*<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>master:0<span class="o">}</span>
</span><span class='line'>jim@lab02&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>The End <small>For now&hellip;</small></h2>

<p>Once again, we&rsquo;ve reached the end of another part of the TACACS+ series.
The final piece will focus on doing everything we did here, but for
Cisco&rsquo;s NXOS platform.  But don&rsquo;t worry!  There will be additional,
supplemental posts in the future to show off other features.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TACACS+ [1/3] - Downloading and Compiling]]></title>
    <link href="http://oss-stack.io//blog/tacacs-downloading-and-compiling/"/>
    <updated>2014-01-19T11:05:17-08:00</updated>
    <id>http://oss-stack.io//blog/tacacs-downloading-and-compiling</id>
    <content type="html"><![CDATA[<blockquote><p>Note: This is Part 1 in a series of posts on TACACS+ installation and
deployment.</p>

<p>There is a special precursor post <a href="http://oss-stack.io//blog/tacacs-introduction-to-aaa/" title="TACACS+ [0/3] - Introduction to AAA">here</a> that you can read if you
don&rsquo;t have experience with TACACS+.</p>

<p><a href="http://oss-stack.io//blog/tacacs-junos-configuration/" title="TACACS+ [2/3] - Junos Configuration">Part 2</a> is available <a href="http://oss-stack.io//blog/tacacs-junos-configuration/" title="TACACS+ [2/3] - Junos Configuration">here</a>.</p></blockquote>

<p>This post is all about installing TACACS+.  For this guide, we&rsquo;re going
to use <a href="http://www.shrubbery.net/tac_plus/" title="Shrubbery Networks' TACACS+ Daemon">Shrubbery Networks&#8217; excellent TACACS+ daemon</a>.  We&rsquo;re also
going to start laying the foundations for a centralized configuration
control system using <code>git</code>.  Finally, we&rsquo;ll write a few scripts to wrap
the daemon up nice and tight to make it a bit easier to manage.</p>

<h2>Installing the Daemon</h2>

<p>There may or may not be a package available for the Shrubbery TACACS+
daemon, but for a variety of reasons, it&rsquo;s best to build the most recent
version from source.  This will ensure you get the best new features and
bug fixes.  Plus, building the package is pretty easy.</p>

<blockquote><p>Note: This post&rsquo;s examples are all from Ubuntu 12.04, but the concepts
apply to any Linux distribution or BSD derivative.</p></blockquote>

<h3>Prerequisites</h3>

<p>You&rsquo;ll need a few things to get going.  Here&rsquo;s a list:</p>

<ul>
<li>Root on the target Linux or BSD system</li>
<li>Essential compilation tools</li>
<li><code>tcp_wrappers</code> library</li>
</ul>


<p>Here&rsquo;s a quick line to get everything you need from an Ubuntu 12.04
system for which you have the ability to run all commands under <code>sudo</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get upgrade -y
</span><span class='line'>sudo apt-get install -y vim curl build-essential flex bison tcpd
</span><span class='line'>libwrap0-dev git
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h3>Get the Source!</h3>

<p>Getting the source code for the Shrubbery Networks distribution of
TACACS+ is pretty simple.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /usr/src
</span><span class='line'>sudo curl -O
</span><span class='line'>ftp://ftp.shrubbery.net/pub/tac_plus/tacacs+-F4.0.4.27a.tar.gz
</span><span class='line'>sudo tar xzf tacacs+-F4.0.4.27a.tar.gz
</span><span class='line'>rm tacacs+-F4.0.4.27a.tar.gz
</span><span class='line'>sudo chown -R <span class="k">$(</span>whoami<span class="k">)</span> tacacs+-F4.0.4.27a
</span><span class='line'><span class="nb">cd </span>tacacs+-F4.0.4.27a
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Note: As of this post (17 January 2014), F4.0.4.27a is the most recent
version of the Shrubbery Networks TACACS+ daemon.  You&rsquo;ll probably
want to <a href="ftp://ftp.shrubbery.net/pub/tac_plus" title="Shrubbery Networks TACACS+ Daemon FTP">look here</a> to ensure you&rsquo;re getting the most recent
version.</p></blockquote>

<h3>If You Build It&hellip;</h3>

<p>The next part is cake.  We&rsquo;ll create the directory where the daemon will
live, configure the environment, compile the source, and install the
final result.  We&rsquo;ll create the configuration directory, too, but hold
off on populating it for now.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mkdir -p /opt/tac_plus
</span><span class='line'>./configure --prefix<span class="o">=</span>/opt/tac_plus
</span><span class='line'>make
</span><span class='line'>sudo make install
</span><span class='line'>sudo mkdir -p /opt/tac_plus/etc
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Note: you shouldn&rsquo;t encounter any errors, but if you do and need a
hand, feel free to
<a href="mailto:tyler@oss-stack.io?Subject=TACACS%20Installation%20Issues">
e-mail me: tyler (at) oss-stack [dot] io.</a></p></blockquote>

<h3>Wrap It Up</h3>

<p>Next, open up <code>/etc/init/tac_plus.conf</code> with <code>vim</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim /etc/init/tac_plus.conf
</span></code></pre></td></tr></table></div></figure>


<p>Now enter the below into the file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># TACACS+ Upstart Job</span>
</span><span class='line'>
</span><span class='line'>description <span class="s2">&quot;Shrubbery Networks tac_plus Daemon&quot;</span>
</span><span class='line'>author <span class="s2">&quot;Tyler Christiansen &lt;tyler@oss-stack.io&gt;&quot;</span>
</span><span class='line'>
</span><span class='line'>start on startup
</span><span class='line'>stop on shutdown
</span><span class='line'>respawn
</span><span class='line'>expect daemon
</span><span class='line'><span class="nb">exec</span> /opt/tac_plus/bin/tac_plus -C /opt/tac_plus/etc/tac_plus.conf
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Note: if you&rsquo;re not familiar with <code>vim</code>, just press <code>i</code> to enter
<em>insert</em> mode, paste the above contents, press the <code>[escape]</code> key, and
type <code>:wq</code>.</p></blockquote>

<p>So what does the above script do?  Well, when your system starts, the
<code>tac_plus</code> daemon starts.  When you shut your system down, <code>tac_plus</code>
stops.  The service will restart automatically if it crashes, and
upstart should expect the service to daemonize itself.  This line
(<code>expect daemon</code>) is really the key to the <code>upstart</code> script working
properly: without it, <code>upstart</code> will lose track of the process, and you
won&rsquo;t be able to get status of the daemon, stop it, restart it, or
automatically restart when it crashes.</p>

<h3>State of the Daemon <small>Take a break!</small></h3>

<p>So far, we&rsquo;ve installed the Shrubbery Networks <code>tac_plus</code> daemon in a
custom directory and written an <code>upstart</code> script to control it.  Doesn&rsquo;t
sound like much, does it?  Take a quick break&mdash;basic configuration is
next!</p>

<h2>Configuration</h2>

<p>We&rsquo;re going to do something a bit different here.  This is in
preparation for a centralized configuration repository that tracks
changes.  This is why you needed to install <code>git</code> earlier, even though
it isn&rsquo;t required by <code>tac_plus</code>.  We&rsquo;re going to create a new directory
structure under <code>/opt</code>, initialize a <code>git</code> repository, and create the
initial configuration file that we&rsquo;ll build on in the next two posts.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mkdir -p /opt/oss-conf/tac_plus
</span><span class='line'>sudo chown -R <span class="k">$(</span>whoami<span class="k">)</span> /opt/oss-conf
</span><span class='line'><span class="nb">cd</span> /opt/oss-conf
</span><span class='line'>git init
</span><span class='line'>vim tac_plus/tac_plus.conf
</span></code></pre></td></tr></table></div></figure>


<p>Recall the <code>vim</code> crash-course above and enter the below contents into
your <code>tac_plus.conf</code> file:</p>

<blockquote><p>Note: Don&rsquo;t worry too much about what the below information actually
means&mdash;we&rsquo;ll cover it as we go through the next two posts.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">key</span> <span class="o">=</span> <span class="s2">&quot;!i-l0v3_t4C4c5#&quot;</span>
</span><span class='line'>accounting <span class="nv">file</span> <span class="o">=</span> /var/log/tac_plus
</span><span class='line'><span class="nv">group</span> <span class="o">=</span> engineers <span class="o">{</span>
</span><span class='line'>  default <span class="nv">service</span> <span class="o">=</span> permit
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="nv">group</span> <span class="o">=</span> noc <span class="o">{</span>
</span><span class='line'>  default <span class="nv">service</span> <span class="o">=</span> permit
</span><span class='line'><span class="o">}</span>
</span><span class='line'> <span class="nv">user</span> <span class="o">=</span> tyler <span class="o">{</span>
</span><span class='line'>  <span class="nv">member</span> <span class="o">=</span> engineers
</span><span class='line'>  <span class="nv">login</span> <span class="o">=</span> des <span class="nv">$6$nKlz6YCf5d$5jYg3kSMcIpnUP74XOreUiTDlgyFFxP5BivOH4uRl5pc8idyToRtJoe7b</span>.D.CnhGR//R8jmkkW2N4/u9L3l7M1
</span><span class='line'>  <span class="nb">enable</span> <span class="o">=</span> des des <span class="nv">$6$nKlz6YCf5d$5jYg3kSMcIpnUP74XOreUiTDlgyFFxP5BivOH4uRl5pc8idyToRtJoe7b</span>.D.CnhGR//R8jmkkW2N4/u9L3l7M1
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="nv">user</span> <span class="o">=</span> jim <span class="o">{</span>
</span><span class='line'>  <span class="nv">member</span> <span class="o">=</span> noc
</span><span class='line'>  <span class="nv">login</span> <span class="o">=</span> des <span class="nv">$6$QKH4BA</span>/kj<span class="nv">$t</span>/ZI5pXRzRfH0WK/EBye5eZG4twusPTjQPCgF/ZvXD/nfP2f5LqlnY1oVIB1AItoElsSN6quKuf3mrCCkgm7p.
</span><span class='line'>  <span class="nb">enable</span> <span class="o">=</span> des <span class="nv">$6$QKH4BA</span>/kj<span class="nv">$t</span>/ZI5pXRzRfH0WK/EBye5eZG4twusPTjQPCgF/ZvXD/nfP2f5LqlnY1oVIB1AItoElsSN6quKuf3mrCCkgm7p.
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Note: the password for the user <code>tyler</code> is <code>harbl</code>, and the password
for the user <code>jim</code> is <code>blah</code>.</p>

<p>Also note that these passwords are encrypted.  They should <em>always</em>
have <code>des</code> before the hash, and the hash should <em>always</em> indicate the
hash type.  In this case, it is <code>SHA-512</code>.</p>

<p>To generate a hashed password, use the <code>mkpasswd --method=sha-512</code>
command.  Note that your own internal policies may require to use a
different hashing method.</p></blockquote>

<p>Now add the configuration file to the repository and commit it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add tac_plus/tac_plus.conf
</span><span class='line'>git commit -m <span class="s1">&#39;add initial tac_plus configuration&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally, link this to the file your <code>upstart</code> script expects:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo ln -s /opt/oss-conf/tac_plus/tac_plus.conf
</span><span class='line'>/opt/tac_plus/etc/tac_plus.conf
</span></code></pre></td></tr></table></div></figure>


<h2>The End <small>For now&hellip;</small></h2>

<p>A lot of stuff happened.  Downloading, building, installing,
configuring, revision control, upstart job creation, mini crash
courses&hellip;whew!</p>

<p>Some of the items that were briefly covered will have their own posts
(<code>git</code> and Linux basics especially) while others will be expanded upon
later in the TACACS+ series.</p>

<blockquote><p><a href="http://oss-stack.io//blog/tacacs-junos-configuration/" title="TACACS+ [2/3] - Junos Configuration">Part 2</a> is now available <a href="http://oss-stack.io//blog/tacacs-junos-configuration/" title="TACACS+ [2/3] - Junos Configuration">here</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TACACS+ [0/3] - Introduction to AAA]]></title>
    <link href="http://oss-stack.io//blog/tacacs-introduction-to-aaa/"/>
    <updated>2014-01-18T10:58:54-08:00</updated>
    <id>http://oss-stack.io//blog/tacacs-introduction-to-aaa</id>
    <content type="html"><![CDATA[<blockquote><p>Note: this is a special precursor to a series of posts related to AAA
(authentication, authorization, and accounting) in general and TACACS+
specifically.</p></blockquote>

<p>These days, it seems that everyone is using a centralized authentication
mechanism.  There are certainly a lot of ways to do it, too&mdash;scripts
that push SSH keys to every device, tried-and-true services like RADIUS
and TACACS+, or just throwing any possible form of auditing out the door
and handing everyone the same generic credentials.  Let&rsquo;s just pretend
that the last one in that list doesn&rsquo;t happen in the real world.</p>

<h2>AAA <small>Authentication, Authorization, Accounting</small></h2>

<p>AAA is all about one thing: accountability.  You can argue the
&ldquo;authentication&rdquo; and &ldquo;authorization&rdquo; parts, but lets face it: those
exist only to hold technicians and engineers accountable for what they
do.</p>

<h3>Why You Want It</h3>

<p>If you&rsquo;re not using a AAA solution already, you&rsquo;re probably Doing It
Wrong&trade;.  If you have 5 devices and one person accessing those
devices, you can get away with skipping out on AAA.  If your environment
is any more complex, you should seriously consider a AAA solution.</p>

<p>AAA solutions allow you to centralize authentication and authorization,
as well as log accounting information (such as who entered which
commands on which devices at what times).  This is a powerful
combination&mdash;being able to quickly determine who caused an outage can
greatly reduce the time it takes to determine a reason for an outage,
and it has the added benefit of having concrete proof when you coach
your employees on their actions.</p>

<!-- more -->


<h3>RADIUS <small>VS</small> TACACS+</h3>

<p>There&rsquo;s a pretty good argument between some people on the merits of
RADIUS versus TACACS+.  The biggest case for RADIUS that I&rsquo;ve seen is
that it&rsquo;s been around longer and has more integration with various other
services.  For example, Apache has easy-to-use RADIUS modules for
authentication, but the TACACS+ module that&rsquo;s out there is poorly
documented and may not even work depending on your version of Apache.</p>

<p>Why is this even important?  Well, remember that this is called the &ldquo;OSS
Stack,&rdquo; and the whole idea is to consolidate and integrate systems as
much as possible.  This means that applications such as Cacti that can
take advantage of Apache&rsquo;s authentication mechanisms can be tied into
your RADIUS deployment.  This is moderately defeated by the fact that
permissions must be configured in Cacti, which sort of duplicates effort
and work required, but it has its merits.</p>

<p>TACACS+, on the other hand, gives you extreme flexibility.  I define a
set of roles on a device, then configure TACACS+ to bind a user to those
roles.  TACACS+ can be further integrated with Active Directory,
OpenLDAP, <code>/etc/passwd</code>, MySQL, or a plain text file.  RADIUS can do
this as well, but it&rsquo;s much more difficult and involved.</p>

<p>Need more reason to go with TACACS+ instead of RADIUS?  Here&rsquo;s a few
quick ones:</p>

<ul>
<li>RADIUS uses UDP; TACACS+ uses TCP</li>
<li>Because of the use of TCP, TACACS+:

<ul>
<li>Scales higher</li>
<li>Handles congestion better</li>
<li>Handles latency better</li>
</ul>
</li>
<li>RADIUS encrypts the header, but leaves all other packet contents
unencrypted</li>
<li>TACACS+ encrypts the entire packet, leaving a common header
unencrypted to indicate if the packet is encrypted or not</li>
<li>TACACS+ was designed to separate the components of AAA

<ul>
<li>This makes using certain components alone or in conjunction with
other services easier than with RADIUS</li>
</ul>
</li>
<li>TACACS+ can control which commands a user can utilize in addition to
that user&rsquo;s role

<ul>
<li>RADIUS cannot do this</li>
</ul>
</li>
</ul>


<p>For the above reasons, we&rsquo;re going to be going with TACACS+.  Most
articles at The OSS Stack will stick with TACACS+, although RADIUS will
be explored in certain posts as it is necessary for certain
infrastructure (notably 802.1x).</p>

<h3>Integrating with Authentication Infrastructure</h3>

<p>One of the great things you can do with TACACS+ is integrate it with
your existing authentication infrastructure.  This means if you already
have Active Directory or OpenLDAP deployments, you can configure TACACS+
to pass the authentication off to those services.</p>

<p>We will <strong>NOT</strong> be doing that in this series.  This type of
integration, while good and highly sought after, introduces a terrible
point of failure.  Equipment lockout has been observed under certain
conditions where the TACACS+ server is available, but the backend AD or
LDAP server is not.  This causes a router or switch to reach the TACACS+
server but fail to authenticate (because the backend Active Directory,
OpenLDAP, or RSA server is down), resulting in all users being unable to
log into the device.</p>

<p>However, as this is a common desire amongst administrators, it will be
covered in a future supplemental article with a very large and in-depth
disclaimer.</p>

<h2>Other Options</h2>

<p>There are, of course, other options.  Routers, switches, and firewalls
from Juniper Networks can be configured to log all commands to a
separate logfile, and an engineer can write a script that copies SSH
keys to devices that support key-based authentication.  There are a few
problems with this, namely that not all devices support key-based
authentication.  There is also a problem when logging in from a laptop
or iPad that does not have its public key loaded on the network device.
It&rsquo;s also an administrative nightmare when users need to be removed on
all devices.</p>

<p>For this reason, these types of &ldquo;centralized&rdquo; authentication and/or
logging will not be explored here at OSS Stack.</p>
]]></content>
  </entry>
  
</feed>
